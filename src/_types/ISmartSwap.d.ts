/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from 'ethers'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'
import { TypedEventFilter, TypedEvent, TypedListener } from './commons'

interface ISmartSwapInterface extends ethers.utils.Interface {
  functions: {
    'BNBtoSTTSInfo(uint256)': FunctionFragment
    'BNBtoSTTSPrice()': FunctionFragment
    'BNBtoSTTSWithoutSlippage(uint256)': FunctionFragment
    'STTStoBNBInfo(uint256)': FunctionFragment
    'STTStoBNBPrice()': FunctionFragment
    'STTStoBNBWithoutSlippage(uint256)': FunctionFragment
    'STTStoSTTPrice()': FunctionFragment
    'STTtoSTTSInfo(uint256,uint256)': FunctionFragment
    'calculateSlippage(uint256,uint256)': FunctionFragment
    'estimatedBNBtoSTTS(uint256)': FunctionFragment
    'estimatedSTTSforSTT(uint256)': FunctionFragment
    'estimatedSTTStoBNB(uint256)': FunctionFragment
    'safeBnbSwap(uint256,uint256)': FunctionFragment
    'safeSTTSwap(uint256,uint256,uint256,uint256)': FunctionFragment
    'swapBNBtoSTTS(uint256,uint256)': FunctionFragment
    'swapSTTStoBNB(uint256,uint256,uint256)': FunctionFragment
    'swapSTTtoSTTS(uint256,uint256,uint256,uint256)': FunctionFragment
  }

  encodeFunctionData(
    functionFragment: 'BNBtoSTTSInfo',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'BNBtoSTTSPrice',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'BNBtoSTTSWithoutSlippage',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'STTStoBNBInfo',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'STTStoBNBPrice',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'STTStoBNBWithoutSlippage',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'STTStoSTTPrice',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'STTtoSTTSInfo',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'calculateSlippage',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'estimatedBNBtoSTTS',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'estimatedSTTSforSTT',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'estimatedSTTStoBNB',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'safeBnbSwap',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'safeSTTSwap',
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'swapBNBtoSTTS',
    values: [BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'swapSTTStoBNB',
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'swapSTTtoSTTS',
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string

  decodeFunctionResult(
    functionFragment: 'BNBtoSTTSInfo',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'BNBtoSTTSPrice',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'BNBtoSTTSWithoutSlippage',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'STTStoBNBInfo',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'STTStoBNBPrice',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'STTStoBNBWithoutSlippage',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'STTStoSTTPrice',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'STTtoSTTSInfo',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'calculateSlippage',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'estimatedBNBtoSTTS',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'estimatedSTTSforSTT',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'estimatedSTTStoBNB',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'safeBnbSwap', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'safeSTTSwap', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'swapBNBtoSTTS',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'swapSTTStoBNB',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'swapSTTtoSTTS',
    data: BytesLike
  ): Result

  events: {
    'SwapBnbForStts(address,uint256,uint256)': EventFragment
    'SwapSttForStts(address,uint256,uint256)': EventFragment
    'SwapSttsForBnb(address,uint256,uint256)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'SwapBnbForStts'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SwapSttForStts'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SwapSttsForBnb'): EventFragment
}

export class ISmartSwap extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this

  listeners(eventName?: string): Array<Listener>
  off(eventName: string, listener: Listener): this
  on(eventName: string, listener: Listener): this
  once(eventName: string, listener: Listener): this
  removeListener(eventName: string, listener: Listener): this
  removeAllListeners(eventName?: string): this

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>

  interface: ISmartSwapInterface

  functions: {
    BNBtoSTTSInfo(
      bnbAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    'BNBtoSTTSInfo(uint256)'(
      bnbAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    BNBtoSTTSPrice(overrides?: CallOverrides): Promise<[BigNumber]>

    'BNBtoSTTSPrice()'(overrides?: CallOverrides): Promise<[BigNumber]>

    BNBtoSTTSWithoutSlippage(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'BNBtoSTTSWithoutSlippage(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    STTStoBNBInfo(
      sttsAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    'STTStoBNBInfo(uint256)'(
      sttsAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    STTStoBNBPrice(overrides?: CallOverrides): Promise<[BigNumber]>

    'STTStoBNBPrice()'(overrides?: CallOverrides): Promise<[BigNumber]>

    STTStoBNBWithoutSlippage(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'STTStoBNBWithoutSlippage(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    STTStoSTTPrice(overrides?: CallOverrides): Promise<[BigNumber]>

    'STTStoSTTPrice()'(overrides?: CallOverrides): Promise<[BigNumber]>

    STTtoSTTSInfo(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    'STTtoSTTSInfo(uint256,uint256)'(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    calculateSlippage(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'calculateSlippage(uint256,uint256)'(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    estimatedBNBtoSTTS(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'estimatedBNBtoSTTS(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    estimatedSTTSforSTT(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'estimatedSTTSforSTT(uint256)'(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    estimatedSTTStoBNB(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'estimatedSTTStoBNB(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    safeBnbSwap(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    'safeBnbSwap(uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    safeSTTSwap(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    'safeSTTSwap(uint256,uint256,uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    swapBNBtoSTTS(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    'swapBNBtoSTTS(uint256,uint256)'(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    swapSTTStoBNB(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    'swapSTTStoBNB(uint256,uint256,uint256)'(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    swapSTTtoSTTS(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    'swapSTTtoSTTS(uint256,uint256,uint256,uint256)'(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>
  }

  BNBtoSTTSInfo(
    bnbAmounts: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  'BNBtoSTTSInfo(uint256)'(
    bnbAmounts: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  BNBtoSTTSPrice(overrides?: CallOverrides): Promise<BigNumber>

  'BNBtoSTTSPrice()'(overrides?: CallOverrides): Promise<BigNumber>

  BNBtoSTTSWithoutSlippage(
    bnbAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'BNBtoSTTSWithoutSlippage(uint256)'(
    bnbAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  STTStoBNBInfo(
    sttsAmounts: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  'STTStoBNBInfo(uint256)'(
    sttsAmounts: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  STTStoBNBPrice(overrides?: CallOverrides): Promise<BigNumber>

  'STTStoBNBPrice()'(overrides?: CallOverrides): Promise<BigNumber>

  STTStoBNBWithoutSlippage(
    sttsAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'STTStoBNBWithoutSlippage(uint256)'(
    sttsAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  STTStoSTTPrice(overrides?: CallOverrides): Promise<BigNumber>

  'STTStoSTTPrice()'(overrides?: CallOverrides): Promise<BigNumber>

  STTtoSTTSInfo(
    sttAmounts: BigNumberish,
    percent: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      slippage: BigNumber
      allowed: BigNumber
      min: BigNumber
      max: BigNumber
    }
  >

  'STTtoSTTSInfo(uint256,uint256)'(
    sttAmounts: BigNumberish,
    percent: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      slippage: BigNumber
      allowed: BigNumber
      min: BigNumber
      max: BigNumber
    }
  >

  calculateSlippage(
    totalAmount: BigNumberish,
    amounts: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'calculateSlippage(uint256,uint256)'(
    totalAmount: BigNumberish,
    amounts: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  estimatedBNBtoSTTS(
    bnbAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'estimatedBNBtoSTTS(uint256)'(
    bnbAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  estimatedSTTSforSTT(
    sttAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'estimatedSTTSforSTT(uint256)'(
    sttAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  estimatedSTTStoBNB(
    sttsAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'estimatedSTTStoBNB(uint256)'(
    sttsAmountIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  safeBnbSwap(
    paymentAmountIn: BigNumberish,
    deadline: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  'safeBnbSwap(uint256,uint256)'(
    paymentAmountIn: BigNumberish,
    deadline: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  safeSTTSwap(
    paymentAmountIn: BigNumberish,
    minSttsAmount: BigNumberish,
    percent: BigNumberish,
    deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  'safeSTTSwap(uint256,uint256,uint256,uint256)'(
    paymentAmountIn: BigNumberish,
    minSttsAmount: BigNumberish,
    percent: BigNumberish,
    deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  swapBNBtoSTTS(
    minSttsAmount: BigNumberish,
    deadline: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  'swapBNBtoSTTS(uint256,uint256)'(
    minSttsAmount: BigNumberish,
    deadline: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  swapSTTStoBNB(
    sttsAmount: BigNumberish,
    minBnbAmount: BigNumberish,
    deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  'swapSTTStoBNB(uint256,uint256,uint256)'(
    sttsAmount: BigNumberish,
    minBnbAmount: BigNumberish,
    deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  swapSTTtoSTTS(
    sttAmountIn: BigNumberish,
    minSttsAmount: BigNumberish,
    maxSttsAmount: BigNumberish,
    deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  'swapSTTtoSTTS(uint256,uint256,uint256,uint256)'(
    sttAmountIn: BigNumberish,
    minSttsAmount: BigNumberish,
    maxSttsAmount: BigNumberish,
    deadline: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>

  callStatic: {
    BNBtoSTTSInfo(
      bnbAmounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    'BNBtoSTTSInfo(uint256)'(
      bnbAmounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    BNBtoSTTSPrice(overrides?: CallOverrides): Promise<BigNumber>

    'BNBtoSTTSPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    BNBtoSTTSWithoutSlippage(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'BNBtoSTTSWithoutSlippage(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    STTStoBNBInfo(
      sttsAmounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    'STTStoBNBInfo(uint256)'(
      sttsAmounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    STTStoBNBPrice(overrides?: CallOverrides): Promise<BigNumber>

    'STTStoBNBPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    STTStoBNBWithoutSlippage(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'STTStoBNBWithoutSlippage(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    STTStoSTTPrice(overrides?: CallOverrides): Promise<BigNumber>

    'STTStoSTTPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    STTtoSTTSInfo(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    'STTtoSTTSInfo(uint256,uint256)'(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        slippage: BigNumber
        allowed: BigNumber
        min: BigNumber
        max: BigNumber
      }
    >

    calculateSlippage(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateSlippage(uint256,uint256)'(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    estimatedBNBtoSTTS(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'estimatedBNBtoSTTS(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    estimatedSTTSforSTT(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'estimatedSTTSforSTT(uint256)'(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    estimatedSTTStoBNB(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'estimatedSTTStoBNB(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    safeBnbSwap(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>

    'safeBnbSwap(uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>

    safeSTTSwap(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>

    'safeSTTSwap(uint256,uint256,uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>

    swapBNBtoSTTS(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>

    'swapBNBtoSTTS(uint256,uint256)'(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>

    swapSTTStoBNB(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>

    'swapSTTStoBNB(uint256,uint256,uint256)'(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>

    swapSTTtoSTTS(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>

    'swapSTTtoSTTS(uint256,uint256,uint256,uint256)'(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber]>
  }

  filters: {
    SwapBnbForStts(
      user: string | null,
      amountIn: null,
      amountOut: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; amountIn: BigNumber; amountOut: BigNumber }
    >

    SwapSttForStts(
      user: string | null,
      amountIn: null,
      amountOut: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; amountIn: BigNumber; amountOut: BigNumber }
    >

    SwapSttsForBnb(
      user: string | null,
      amountIn: null,
      amountOut: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { user: string; amountIn: BigNumber; amountOut: BigNumber }
    >
  }

  estimateGas: {
    BNBtoSTTSInfo(
      bnbAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    'BNBtoSTTSInfo(uint256)'(
      bnbAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    BNBtoSTTSPrice(overrides?: CallOverrides): Promise<BigNumber>

    'BNBtoSTTSPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    BNBtoSTTSWithoutSlippage(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'BNBtoSTTSWithoutSlippage(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    STTStoBNBInfo(
      sttsAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    'STTStoBNBInfo(uint256)'(
      sttsAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    STTStoBNBPrice(overrides?: CallOverrides): Promise<BigNumber>

    'STTStoBNBPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    STTStoBNBWithoutSlippage(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'STTStoBNBWithoutSlippage(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    STTStoSTTPrice(overrides?: CallOverrides): Promise<BigNumber>

    'STTStoSTTPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    STTtoSTTSInfo(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'STTtoSTTSInfo(uint256,uint256)'(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    calculateSlippage(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateSlippage(uint256,uint256)'(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    estimatedBNBtoSTTS(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'estimatedBNBtoSTTS(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    estimatedSTTSforSTT(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'estimatedSTTSforSTT(uint256)'(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    estimatedSTTStoBNB(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'estimatedSTTStoBNB(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    safeBnbSwap(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    'safeBnbSwap(uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    safeSTTSwap(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    'safeSTTSwap(uint256,uint256,uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    swapBNBtoSTTS(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    'swapBNBtoSTTS(uint256,uint256)'(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    swapSTTStoBNB(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    'swapSTTStoBNB(uint256,uint256,uint256)'(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    swapSTTtoSTTS(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>

    'swapSTTtoSTTS(uint256,uint256,uint256,uint256)'(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>
  }

  populateTransaction: {
    BNBtoSTTSInfo(
      bnbAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    'BNBtoSTTSInfo(uint256)'(
      bnbAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    BNBtoSTTSPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'BNBtoSTTSPrice()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    BNBtoSTTSWithoutSlippage(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'BNBtoSTTSWithoutSlippage(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    STTStoBNBInfo(
      sttsAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    'STTStoBNBInfo(uint256)'(
      sttsAmounts: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    STTStoBNBPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'STTStoBNBPrice()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    STTStoBNBWithoutSlippage(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'STTStoBNBWithoutSlippage(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    STTStoSTTPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'STTStoSTTPrice()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    STTtoSTTSInfo(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'STTtoSTTSInfo(uint256,uint256)'(
      sttAmounts: BigNumberish,
      percent: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    calculateSlippage(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'calculateSlippage(uint256,uint256)'(
      totalAmount: BigNumberish,
      amounts: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    estimatedBNBtoSTTS(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'estimatedBNBtoSTTS(uint256)'(
      bnbAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    estimatedSTTSforSTT(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'estimatedSTTSforSTT(uint256)'(
      sttAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    estimatedSTTStoBNB(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'estimatedSTTStoBNB(uint256)'(
      sttsAmountIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    safeBnbSwap(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    'safeBnbSwap(uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    safeSTTSwap(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    'safeSTTSwap(uint256,uint256,uint256,uint256)'(
      paymentAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      percent: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    swapBNBtoSTTS(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    'swapBNBtoSTTS(uint256,uint256)'(
      minSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    swapSTTStoBNB(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    'swapSTTStoBNB(uint256,uint256,uint256)'(
      sttsAmount: BigNumberish,
      minBnbAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    swapSTTtoSTTS(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>

    'swapSTTtoSTTS(uint256,uint256,uint256,uint256)'(
      sttAmountIn: BigNumberish,
      minSttsAmount: BigNumberish,
      maxSttsAmount: BigNumberish,
      deadline: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>
  }
}

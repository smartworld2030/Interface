{"version":3,"sources":["_types/wallet.types.ts","_reducers/wallet.reducer.ts","_types/account.types.ts","_reducers/account.reducer.ts","_types/bank.types.ts","_reducers/bank.reducer.ts","_types/index.ts","_reducers/swap.reducer.ts","_types/invest.types.ts","_reducers/invest.reducer.ts","_reducers/freeze.reducer.ts","_reducers/index.ts","_store/store.config.ts","_actions/wallet.actions.ts","App.tsx","assets/earth.jpg","assets/background.png","assets/clouds.png","components/Globe/Globe.tsx","_helpers/constants.ts","Theme/Colors.ts","components/Layout/svgs/HeadCircle.tsx","assets/Logo.png","components/Layout/svgs/ImageLogo.tsx","components/Header/index.tsx","components/Layout/divs/Divs.tsx","_types/snackbar.types.ts","_helpers/chainList.ts","_helpers/alert.tsx","_contracts/erc20.ts","_helpers/api.ts","_contracts/bank.ts","_contracts/invest.ts","_contracts/tokenPrice.ts","_contracts/info.ts","_actions/account.actions.ts","components/Layout/divs/Sections.tsx","router/ChangeWallet.tsx","router/ProtectedRoute.tsx","_actions/invest.actions.ts","components/Wallet/Global/AccountAddress.tsx","components/Wallet/Investment/Withdraw/index.tsx","components/Layout/svgs/CircleInput.tsx","components/Layout/svgs/DepositCircle.tsx","components/Layout/svgs/TokenCircle.tsx","components/Layout/typography/Tokens.tsx","components/Layout/svgs/DepositButton.tsx","_actions/bank.actions.ts","components/Wallet/Investment/Deposit/DepositInfo.tsx","components/Wallet/Investment/Deposit/index.tsx","components/Layout/svgs/ReferralButton.tsx","components/Wallet/Investment/Details/index.tsx","components/Wallet/Investment/index.tsx","router/AppRouter.tsx","index.tsx"],"names":["ONBOARDING_REQUEST","WALLET_WAITING_MESSAGE","WALLET_REQUEST","WALLET_ACTIVATED","WALLET_FAILURE","CHAIN_CHANGE_REQUEST","CHAIN_CHANGE_SUCCESS","CHAIN_CHANGE_FAILURE","ADDRESS_CHANGE_REQUEST","ADDRESS_CHANGE_SUCCESS","ADDRESS_CHANGE_FAILURE","initialState","error","msg","code","chainId","active","waiting","walletReducer","state","action","type","payload","ACCOUNT_BALANCE_REQUEST","ACCOUNT_BALANCE_SUCCESS","ACCOUNT_BALANCE_FAILURE","ACCOUNT_LOGGEDIN","ACCOUNT_LOGOUT","CHANGE_THEME","balances","BTCB","STT","STTS","BNB","loggedIn","loading","tokens","theme","accountReducer","address","localStorage","setItem","TOKEN_PRICE_REQUEST","TOKEN_PRICE_SUCCESS","TOKEN_PRICE_FAILURE","BANK_TOKEN_BALANCE_REQUEST","BANK_TOKEN_BALANCE_SUCCESS","BANK_TOKEN_BALANCE_FAILURE","BANK_SATOSHI_BALANCE_REQUEST","BANK_SATOSHI_BALANCE_SUCCESS","BANK_SATOSHI_BALANCE_FAILURE","bankLoading","prices","dollar","BTC","56","97","bankReducer","satoshi","REQUEST","SUCCESS","FAILURE","swapReducerDefaultState","swapReducer","INVEST_RESET","INVEST_METHOD_REQUEST","INVEST_METHOD_SUCCESS","INVEST_METHOD_FAILURE","INVEST_ACCOUNT_REQUEST","INVEST_ACCOUNT_SUCCESS","INVEST_ACCOUNT_FAILURE","INVEST_TRANSACTION_MINED","INVEST_TRANSACTION_READY","INVEST_MESSAGES","account","hourly","percent","referrer","referral","btcb","stts","bnb","deposits","latestWithdraw","depositDetails","investReducerDefaultState","investLoading","confirmed","maxPercent","investReducer","method","transaction","freezeReducerDefaultState","freezeReducer","rootReducer","history","combineReducers","router","connectRouter","bank","invest","freeze","swap","wallet","createBrowserHistory","store","preloadingState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","thunk","configureStore","timer","interval","provider","signer","tokenContract","investContract","bankContract","priceContract","setTime","ReactGlobe","height","width","globeEl","useRef","useState","popData","setPopData","useEffect","fetch","then","res","text","csv","d3","lat","lng","pop","current","controls","autoRotate","autoRotateSpeed","camera","setViewOffset","weightColor","domain","ref","globeImageUrl","earth","bumpImageUrl","clouds","backgroundImageUrl","background","hexBinPointsData","hexBinPointWeight","hexAltitude","d","sumWeight","hexBinResolution","hexTopColor","hexSideColor","hexBinMerge","enablePointerInteraction","supportedChain","tooShorter","str","length","slice","Colors","green","red","secondText","HeadCircle","positionX","positionY","size","onClick","link","to","cx","cy","r","stroke","strokeWidth","fill","x","y","textAnchor","alignmentBaseline","fontSize","fontWeight","StyledImage","styled","image","ImageLogo","position","xlinkHref","Logo","console","log","StyledSvg","svg","Header","setActive","half","quarter","eighth","fristHeight","secondHeight","querylimiter","linkArray","sizeCalculator","id","strokeDasharray","map","item","index","key","AbsoluteBody","hoverColor","borderColor","props","div","FlexDiv","RowBody","Row","RelativeBody","SHOW_SNACKBAR","name","shortName","chain","network","networkId","nativeCurrency","symbol","decimals","rpc","faucets","explorers","url","standard","infoURL","errorHandler","err","errorCompiler","dispatch","snackbar","snackBarMaker","successHandler","warningHandler","replace","data","message","split","variant","btn","txLink","getState","chainList","open","notification","placement","duration","stt","btc","abi","ethereum","onBoard","MetaMaskOnboarding","bytesFormater","balance","parseInt","_hex","formater","token","utils","formatUnits","erc20","formatToString","formaterNumber","decimal","Number","roundDecimals","value","Math","round","initialization","isMetaMask","providers","Web3Provider","send","getSigner","on","location","reload","accounts","accountHandler","Contract","tokenPrice","_metamask","isUnlocked","getAddress","clearTimeout","setTimeout","Promise","all","resolve","balanceOf","catch","getBalance","push","reduce","items","accountTokenBalances","clearInterval","setInterval","a","request","changeToMain","params","chainName","rpcUrls","blockExplorerUrls","startOnBoarding","startOnboarding","StyledDiv","animated","connect","bindActionCreators","xs","span","lg","style","textAlign","paddingTop","padding","component","isMobile","spinning","tip","removeError","requestInvest","args","functions","hash","once","investInformation","investmentDeposit","query","readInvest","accountInfo","allowance","info","requestDeposit","isAddress","approve","constants","MaxUint256","tx","withdrawInterest","readInvestItems","forEach","its","reject","array","setAccount","cursor","xmlns","viewBox","c","PI","period","secPast","Date","now","secRemain","pastRadius","direction","justify","align","clipPath","strokeLinecap","strokeDashoffset","attributeName","values","dur","begin","repeatCount","dominantBaseline","rx","ry","radius","className","CircleInput","onMax","rest","zIndex","top","left","touchAction","Infinity","inputHandler","percentHandler","roundSlideTune","event","pageX","touches","clientX","pageY","clientY","elPos","target","getBoundingClientRect","dX","dY","cX","cY","eX","eY","abs","sign","circleSlider","buttons","onTouchMove","onMouseMove","color","margin","placeholder","min","step","onChange","onTouchEnd","TokenCircle","useSpring","opacity","transform","config","mass","tension","friction","g","o","t","TokenP","TokenValue","p","tokenColor","double","title","suffix","valueStyle","precision","prefix","DepositButton","done","disable","undefined","focusable","data-icon","requestBank","tokenPrices","price","toString","toLowerCase","latestAnswer","latestPrice","calcSatoshi","cal","calcPercent","tokenNames","investError","setToken","setBalance","setValue","b","val","max","md","e","currentTarget","valueAsNumber","per","percentToValue","ReferralButton","pathname","setDone","setLoading","origin","navigator","clipboard","writeText","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","success","closeIcon","delay","fluid","gutterWidth","minHeight","Deposit","Withdraw","AppRouter","useLocation","useTransition","from","enter","leave","transitions","_","exact","path","Test","App","updateDimensions","setState","appWidth","innerWidth","spacerHeight","innerHeight","this","init","addEventListener","removeEventListener","globeHeight","Globe","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.03a34c1c.chunk.js","sourcesContent":["import { Contract } from 'ethers'\nimport { ISmartWorld } from './ISmartWorld'\nimport { SmartInvest } from './SmartInvest'\n\nexport const ONBOARDING_REQUEST = 'ONBOARDING_REQUEST'\nexport const WALLET_WAITING_MESSAGE = 'WALLET_WAITING_MESSAGE'\n\nexport const WALLET_REQUEST = 'WALLET_REQUEST'\nexport const WALLET_ACTIVATED = 'WALLET_ACTIVATED'\nexport const WALLET_FAILURE = 'WALLET_FAILURE'\n\nexport const CHAIN_CHANGE_REQUEST = 'CHAIN_CHANGE_REQUEST'\nexport const CHAIN_CHANGE_SUCCESS = 'CHAIN_CHANGE_SUCCESS'\nexport const CHAIN_CHANGE_FAILURE = 'CHAIN_CHANGE_FAILURE'\n\nexport const ADDRESS_CHANGE_REQUEST = 'ADDRESS_CHANGE_REQUEST'\nexport const ADDRESS_CHANGE_SUCCESS = 'ADDRESS_CHANGE_SUCCESS'\nexport const ADDRESS_CHANGE_FAILURE = 'ADDRESS_CHANGE_FAILURE'\n\nexport type BankContract = ISmartWorld | Contract\nexport type InvestContract = SmartInvest | Contract\nexport type PriceContract = { latestAnswer: any } | Contract\n\nexport interface DefaultWalletState {\n  active: boolean\n  waiting: boolean\n  error: ErrorObject\n  chainId: number\n}\n\nexport interface ErrorObject {\n  msg: string\n  code: number\n}\n\nexport interface RegisterRequestAction {\n  type: typeof WALLET_REQUEST\n}\nexport interface RegisterSuccessAction {\n  type: typeof WALLET_ACTIVATED\n  payload: {\n    chainId: number\n  }\n}\nexport type ContractNames = 'STT' | 'STTS' | 'BTCB'\n\nexport type ContractObject = {\n  [key in ContractNames]: Contract\n}\nexport interface RegisterFailureAction {\n  type: typeof WALLET_FAILURE\n  error: ErrorObject\n}\n\nexport interface ChainChangeRequestAction {\n  type: typeof CHAIN_CHANGE_REQUEST\n}\nexport interface ChainChangeSuccessAction {\n  type: typeof CHAIN_CHANGE_SUCCESS\n  payload: {\n    chainId: number\n  }\n}\nexport interface ChainChangeFailureAction {\n  type: typeof CHAIN_CHANGE_FAILURE\n  payload: {\n    error: ErrorObject\n  }\n}\n\nexport interface WalletWaitingAction {\n  type: typeof WALLET_WAITING_MESSAGE\n  payload: {\n    error: ErrorObject\n  }\n}\n\nexport interface AccountChangeRequestAction {\n  type: typeof ADDRESS_CHANGE_REQUEST\n}\n\nexport interface AccountChangeSuccessAction {\n  type: typeof ADDRESS_CHANGE_SUCCESS\n}\n\nexport interface AccountChangeFailureAction {\n  type: typeof ADDRESS_CHANGE_FAILURE\n  payload: {\n    error: ErrorObject\n  }\n}\n\nexport interface OnBoardingRequestAction {\n  type: typeof ONBOARDING_REQUEST\n  payload: {\n    error: ErrorObject\n  }\n}\n\nexport type WalletActionTypes =\n  | ChainChangeRequestAction\n  | OnBoardingRequestAction\n  | RegisterRequestAction\n  | RegisterSuccessAction\n  | RegisterFailureAction\n  | WalletWaitingAction\n  | ChainChangeRequestAction\n  | ChainChangeSuccessAction\n  | ChainChangeFailureAction\n  | AccountChangeRequestAction\n  | AccountChangeSuccessAction\n  | AccountChangeFailureAction\n","import {\n  WALLET_FAILURE,\n  WALLET_REQUEST,\n  WALLET_ACTIVATED,\n  WalletActionTypes,\n  DefaultWalletState,\n  ADDRESS_CHANGE_REQUEST,\n  ADDRESS_CHANGE_SUCCESS,\n  ADDRESS_CHANGE_FAILURE,\n  CHAIN_CHANGE_FAILURE,\n  CHAIN_CHANGE_SUCCESS,\n  ONBOARDING_REQUEST,\n  WALLET_WAITING_MESSAGE,\n} from '../_types/wallet.types'\n\nconst initialState: DefaultWalletState = {\n  error: { msg: '', code: 0 },\n  chainId: 1,\n  active: false,\n  waiting: false,\n}\n\nexport function walletReducer(\n  state = initialState,\n  action: WalletActionTypes\n): DefaultWalletState {\n  switch (action.type) {\n    case WALLET_REQUEST:\n      return { ...state, waiting: true }\n    case ONBOARDING_REQUEST:\n      return { ...state, waiting: true, error: action.payload.error }\n    case WALLET_ACTIVATED:\n      return {\n        ...state,\n        active: true,\n        waiting: false,\n        ...action.payload,\n      }\n    case WALLET_FAILURE:\n      return {\n        ...state,\n        active: false,\n        waiting: false,\n        error: action.error,\n      }\n    case CHAIN_CHANGE_SUCCESS:\n      return {\n        ...state,\n        chainId: action.payload.chainId,\n      }\n    case ADDRESS_CHANGE_REQUEST:\n      return { ...state, waiting: true }\n    case ADDRESS_CHANGE_SUCCESS:\n      return {\n        ...state,\n        waiting: false,\n        active: true,\n      }\n    case WALLET_WAITING_MESSAGE:\n      return {\n        ...state,\n        error: action.payload.error,\n      }\n    case ADDRESS_CHANGE_FAILURE:\n      return {\n        ...state,\n        waiting: false,\n        error: action.payload.error,\n      }\n    case CHAIN_CHANGE_FAILURE:\n      return {\n        ...state,\n        waiting: false,\n        error: action.payload.error,\n      }\n    default:\n      return state\n  }\n}\n","export const ACCOUNT_BALANCE_REQUEST = 'ACCOUNT_BALANCE_REQUEST'\nexport const ACCOUNT_BALANCE_SUCCESS = 'ACCOUNT_BALANCE_SUCCESS'\nexport const ACCOUNT_BALANCE_FAILURE = 'ACCOUNT_BALANCE_FAILURE'\n\nexport const ACCOUNT_SATOSHI_BALANCE_REQUEST = 'ACCOUNT_SATOSHI_BALANCE_REQUEST'\nexport const ACCOUNT_SATOSHI_BALANCE_SUCCESS = 'ACCOUNT_SATOSHI_BALANCE_SUCCESS'\nexport const ACCOUNT_SATOSHI_BALANCE_FAILURE = 'ACCOUNT_SATOSHI_BALANCE_FAILURE'\n\nexport const ACCOUNT_LOGGEDIN = 'ACCOUNT_LOGGEDIN'\nexport const ACCOUNT_LOGOUT = 'ACCOUNT_LOGOUT'\n\nexport const LOST_REQUEST = 'ACCOUNT_LOST_REQUEST'\nexport const LOST_SUCCESS = 'ACCOUNT_LOST_SUCCESS'\nexport const LOST_FAILURE = 'ACCOUNT_LOST_FAILURE'\n\nexport const CHANGE_THEME = 'CHANGE_THEME'\n\nexport interface DefaultUserState {\n  loggedIn: boolean\n  loading: boolean\n  address?: string\n  tokens: TokenBalances\n  error?: string\n  theme: 'light' | 'dark'\n}\n\nexport type TokenBalances = {\n  STT: number\n  STTS: number\n  BTCB: number\n  BNB: number\n}\n\nexport interface AccountBalanceRequestAction {\n  type: typeof ACCOUNT_BALANCE_REQUEST\n}\nexport interface AccountBalanceSuccessAction {\n  type: typeof ACCOUNT_BALANCE_SUCCESS\n  payload: { tokens: TokenBalances; error?: string }\n}\n\nexport interface AccountBalanceFailureAction {\n  type: typeof ACCOUNT_BALANCE_FAILURE\n  payload: { error: string }\n}\n\nexport interface LoginAction {\n  type: typeof ACCOUNT_LOGGEDIN\n  payload: { address: string }\n}\nexport interface LogoutAction {\n  type: typeof ACCOUNT_LOGOUT\n}\n\nexport interface LostRequestAction {\n  type: typeof LOST_REQUEST\n}\nexport interface LostSuccessAction {\n  type: typeof LOST_SUCCESS\n  message: string\n}\nexport interface LostFailureAction {\n  type: typeof LOST_FAILURE\n  payload: { error: string }\n}\n\nexport interface ChangeThemeAction {\n  type: typeof CHANGE_THEME\n  theme: 'light' | 'dark'\n}\n\nexport type UserActionTypes =\n  | AccountBalanceRequestAction\n  | AccountBalanceSuccessAction\n  | AccountBalanceFailureAction\n  | LostRequestAction\n  | LostSuccessAction\n  | LostFailureAction\n  | LogoutAction\n  | LoginAction\n  | ChangeThemeAction\n","import {\n  ACCOUNT_LOGOUT,\n  ACCOUNT_LOGGEDIN,\n  CHANGE_THEME,\n  UserActionTypes,\n  DefaultUserState,\n  ACCOUNT_BALANCE_REQUEST,\n  ACCOUNT_BALANCE_SUCCESS,\n  ACCOUNT_BALANCE_FAILURE,\n} from '../_types/account.types'\n\nconst balances = { BTCB: 0, STT: 0, STTS: 0, BNB: 0 }\n\nconst initialState: DefaultUserState = {\n  loggedIn: false,\n  loading: false,\n  tokens: balances,\n  theme: 'dark',\n}\n\nexport function accountReducer(\n  state = initialState,\n  action: UserActionTypes\n): DefaultUserState {\n  switch (action.type) {\n    case ACCOUNT_BALANCE_REQUEST:\n      return { ...state, loading: true, error: '' }\n    case ACCOUNT_BALANCE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loggedIn: true,\n        tokens: { ...balances, ...action.payload.tokens },\n        error: action.payload.error,\n      }\n    case ACCOUNT_BALANCE_FAILURE:\n      return { ...state, loading: false }\n\n    case ACCOUNT_LOGGEDIN:\n      return {\n        ...state,\n        loggedIn: true,\n        loading: false,\n        address: action.payload.address,\n      }\n    case ACCOUNT_LOGOUT:\n      return { ...state, loggedIn: false, loading: true }\n    case CHANGE_THEME:\n      localStorage.setItem('theme', action.theme)\n      return { ...state, theme: action.theme }\n    default:\n      return state\n  }\n}\n","export const TOKEN_PRICE_REQUEST = 'TOKEN_PRICE_REQUEST'\nexport const TOKEN_PRICE_SUCCESS = 'TOKEN_PRICE_SUCCESS'\nexport const TOKEN_PRICE_FAILURE = 'TOKEN_PRICE_FAILURE'\n\nexport const STT_PRICE_REQUEST = 'STT_PRICE_REQUEST'\nexport const STT_PRICE_SUCCESS = 'STT_PRICE_SUCCESS'\nexport const STT_PRICE_FAILURE = 'STT_PRICE_FAILURE'\n\nexport const BANK_TOKEN_BALANCE_REQUEST = 'BANK_TOKEN_BALANCE_REQUEST'\nexport const BANK_TOKEN_BALANCE_SUCCESS = 'BANK_TOKEN_BALANCE_SUCCESS'\nexport const BANK_TOKEN_BALANCE_FAILURE = 'BANK_TOKEN_BALANCE_FAILURE'\n\nexport const BANK_SATOSHI_BALANCE_REQUEST = 'BANK_SATOSHI_BALANCE_REQUEST'\nexport const BANK_SATOSHI_BALANCE_SUCCESS = 'BANK_SATOSHI_BALANCE_SUCCESS'\nexport const BANK_SATOSHI_BALANCE_FAILURE = 'BANK_SATOSHI_BALANCE_FAILURE'\n\nexport interface DefaultBankState {\n  bankLoading: boolean\n  address: { [key: number]: string }\n  tokens: TokenBalances\n  prices: TokenPrices\n  dollar: DoloarPrices\n  satoshi?: TokenBalances\n  error?: string\n}\nexport type DoloarPrices = {\n  BTC: number\n}\nexport type TokenBalances = {\n  STT: number\n  STTS: number\n  BTCB: number\n  BNB: number\n}\n\nexport type TokenPrices = {\n  STT: number\n  STTS: number\n  BTCB: number\n  BNB: number\n}\n\nexport type TokenPriceRequestAction = {\n  type: typeof TOKEN_PRICE_REQUEST\n}\n\nexport type TokenPriceSuccessAction = {\n  type: typeof TOKEN_PRICE_SUCCESS\n  payload: {\n    prices: TokenPrices\n    dollar: DoloarPrices\n  }\n}\n\nexport interface TokenPriceFailureAction {\n  type: typeof TOKEN_PRICE_FAILURE\n  error: string\n}\n\nexport type SttPriceRequestAction = {\n  type: typeof STT_PRICE_REQUEST\n}\n\nexport type SttPriceSuccessAction = {\n  type: typeof STT_PRICE_SUCCESS\n  payload: number\n}\n\nexport interface SttPriceFailureAction {\n  type: typeof STT_PRICE_FAILURE\n  error: string\n}\n\nexport type BankSatoshiRequestAction = {\n  type: typeof BANK_SATOSHI_BALANCE_REQUEST\n}\n\nexport type BankSatoshiSuccessAction = {\n  type: typeof BANK_SATOSHI_BALANCE_SUCCESS\n  payload: { satoshi: TokenBalances }\n}\nexport interface BankSatoshiFailureAction {\n  type: typeof BANK_SATOSHI_BALANCE_FAILURE\n  error: string\n}\n\nexport interface BankTokenRequestAction {\n  type: typeof BANK_TOKEN_BALANCE_REQUEST\n}\nexport interface BankTokenSuccessAction {\n  type: typeof BANK_TOKEN_BALANCE_SUCCESS\n  payload: { tokens: TokenBalances }\n}\nexport interface BankTokenFailureAction {\n  type: typeof BANK_TOKEN_BALANCE_FAILURE\n  error: string\n}\n\nexport type BankActionTypes =\n  | TokenPriceRequestAction\n  | TokenPriceSuccessAction\n  | TokenPriceFailureAction\n  | SttPriceRequestAction\n  | SttPriceSuccessAction\n  | SttPriceFailureAction\n  | BankTokenRequestAction\n  | BankTokenSuccessAction\n  | BankTokenFailureAction\n  | BankSatoshiRequestAction\n  | BankSatoshiSuccessAction\n  | BankSatoshiFailureAction\n","import {\n  BankActionTypes,\n  DefaultBankState,\n  TOKEN_PRICE_FAILURE,\n  TOKEN_PRICE_REQUEST,\n  TOKEN_PRICE_SUCCESS,\n  BANK_TOKEN_BALANCE_REQUEST,\n  BANK_TOKEN_BALANCE_SUCCESS,\n  BANK_TOKEN_BALANCE_FAILURE,\n  BANK_SATOSHI_BALANCE_REQUEST,\n  BANK_SATOSHI_BALANCE_SUCCESS,\n  BANK_SATOSHI_BALANCE_FAILURE,\n} from '../_types/bank.types'\n\nconst balances = { BTCB: 0, STT: 0, STTS: 0, BNB: 0 }\nconst prices = { BTCB: 0, STT: 0, STTS: 0, BNB: 0 }\nconst dollar = { BTC: 0 }\n\nconst initialState: DefaultBankState = {\n  bankLoading: false,\n  tokens: balances,\n  prices,\n  dollar,\n  address: {\n    56: '0xbBe476b50D857BF41bBd1EB02F777cb9084C1564',\n    97: '0x6DFcd84CD2DF9fC3663056c3CbE9F6b5C2Ca6855',\n  },\n}\n\nexport function bankReducer(\n  state = initialState,\n  action: BankActionTypes\n): DefaultBankState {\n  switch (action.type) {\n    case BANK_TOKEN_BALANCE_REQUEST:\n      return { ...state, bankLoading: true }\n    case BANK_TOKEN_BALANCE_SUCCESS:\n      return {\n        ...state,\n        bankLoading: false,\n        tokens: { ...balances, ...action.payload.tokens },\n      }\n    case BANK_TOKEN_BALANCE_FAILURE:\n      return { ...state, bankLoading: false }\n    case BANK_SATOSHI_BALANCE_REQUEST:\n      return { ...state, bankLoading: true }\n    case BANK_SATOSHI_BALANCE_SUCCESS:\n      return {\n        ...state,\n        bankLoading: false,\n        satoshi: { ...state.satoshi, ...action.payload.satoshi },\n      }\n    case BANK_SATOSHI_BALANCE_FAILURE:\n      return { ...state, bankLoading: false }\n    case TOKEN_PRICE_REQUEST:\n      return { ...state, bankLoading: true }\n    case TOKEN_PRICE_SUCCESS:\n      return {\n        ...state,\n        bankLoading: false,\n        prices: { ...state.prices, ...action.payload.prices },\n        dollar: { ...state.dollar, ...action.payload.dollar },\n      }\n    case TOKEN_PRICE_FAILURE:\n      return { ...state, bankLoading: false }\n    default:\n      return state\n  }\n}\n","import { CallHistoryMethodAction, RouterState } from 'connected-react-router'\nimport { DefaultUserState, UserActionTypes } from './account.types'\nimport { DefaultBankState, BankActionTypes } from './bank.types'\nimport { SnackActionTypes, DefaultSnackState } from './snackbar.types'\nimport { DefaultWalletState, WalletActionTypes } from './wallet.types'\nimport { InvestActionTypes, DefaultInvestState } from './invest.types'\nimport { FreezeActionTypes, DefaultFreezeState } from './freeze.types'\nimport { SwapActionTypes, DefaultSwapState } from './swap.types'\n\nexport const REQUEST = {\n  INVEST: 'REQUEST_INVEST',\n  FREEZE: 'REQUEST_FREEZE',\n  SWAP: 'REQUEST_SWAP',\n} as const\nexport const SUCCESS = {\n  INVEST: 'SUCCESS_INVEST',\n  FREEZE: 'SUCCESS_FREEZE',\n  SWAP: 'SUCCESS_SWAP',\n} as const\nexport const FAILURE = {\n  INVEST: 'FAILURE_INVEST',\n  FREEZE: 'FAILURE_FREEZE',\n  SWAP: 'FAILURE_SWAP',\n} as const\n\nexport type AppActions =\n  | InvestActionTypes\n  | UserActionTypes\n  | BankActionTypes\n  | WalletActionTypes\n  | FreezeActionTypes\n  | SnackActionTypes\n  | SwapActionTypes\n  | CallHistoryMethodAction\n\nexport type AppState = {\n  bank: DefaultBankState\n  router: RouterState\n  account: DefaultUserState\n  wallet: DefaultWalletState\n  invest: DefaultInvestState\n  freeze: DefaultFreezeState\n  swap: DefaultSwapState\n}\n","import { FAILURE, REQUEST, SUCCESS } from '../_types'\nimport {\n  SwapActionTypes,\n  DefaultSwapState,\n  DefaultSwapBankState,\n} from '../_types/swap.types'\n\nconst swapReducerDefaultState: DefaultSwapState = {\n  loading: true,\n  error: 'Not Found',\n}\n\nexport const swapReducer = (\n  state = swapReducerDefaultState,\n  action: SwapActionTypes\n): DefaultSwapState => {\n  switch (action.type) {\n    case REQUEST.SWAP:\n      return { ...state, loading: true }\n    case SUCCESS.SWAP:\n      return {\n        ...state,\n        loading: false,\n      }\n    case FAILURE.SWAP:\n      return {\n        ...state,\n        // error: action.error,\n        loading: false,\n      }\n    default:\n      return state\n  }\n}\n","import { Transaction } from 'ethers'\n\nexport const INVEST_RESET = 'INVEST_RESET'\nexport const INVEST_METHOD_REQUEST = 'INVEST_METHOD_REQUEST'\nexport const INVEST_METHOD_SUCCESS = 'INVEST_METHOD_SUCCESS'\nexport const INVEST_METHOD_FAILURE = 'INVEST_METHOD_FAILURE'\n\nexport const INVEST_ACCOUNT_REQUEST = 'INVEST_ACCOUNT_REQUEST'\nexport const INVEST_ACCOUNT_SUCCESS = 'INVEST_ACCOUNT_SUCCESS'\nexport const INVEST_ACCOUNT_FAILURE = 'INVEST_ACCOUNT_FAILURE'\n\nexport const INVEST_TRANSACTION_MINED = 'INVEST_TRANSACTION_MINED'\nexport const INVEST_TRANSACTION_READY = 'INVEST_TRANSACTION_READY'\n\nexport const INVEST_MESSAGES = 'INVEST_MESSAGES'\n\nexport interface DefaultInvestState {\n  transaction?: Transaction\n  method?: string\n  error?: string\n  account: InvestInfo\n  maxPercent: number\n  confirmed: boolean\n  investLoading: boolean\n}\n\nexport type InvestInfo = {\n  bnb: number\n  stts: number\n  btcb: number\n  satoshi: number\n  hourly: number\n  percent: number\n  referrer: number\n  referral: number\n  deposits: number\n  latestWithdraw: number\n  depositDetails: DepositDetail[]\n}\n\ntype DepositDetail = {\n  reward: string\n  endTime: number\n}\n\nexport interface RequestInvestAction {\n  type: typeof INVEST_METHOD_REQUEST\n  payload: { method: string }\n}\n\nexport interface SeccessInvestAction {\n  type: typeof INVEST_METHOD_SUCCESS\n  payload: { transaction: Transaction }\n}\n\nexport interface MinedInvestAction {\n  type: typeof INVEST_TRANSACTION_MINED\n}\n\nexport interface ReadyInvestAction {\n  type: typeof INVEST_TRANSACTION_READY\n}\n\nexport interface FailureInvestAction {\n  type: typeof INVEST_METHOD_FAILURE\n  payload: { error: string }\n}\n\nexport interface AccountInvestRequestAction {\n  type: typeof INVEST_ACCOUNT_REQUEST\n}\nexport interface AccountInvestSuccessAction {\n  type: typeof INVEST_ACCOUNT_SUCCESS\n  payload: { account: InvestInfo; maxPercent: number; error?: string }\n}\n\nexport interface AccountInvestFailureAction {\n  type: typeof INVEST_ACCOUNT_FAILURE\n  payload: { error: string }\n}\n\nexport interface MessageInvestAction {\n  type: typeof INVEST_MESSAGES\n  payload: { error: string }\n}\n\nexport interface ResetInvestAction {\n  type: typeof INVEST_RESET\n}\n\nexport type InvestActionTypes =\n  | ResetInvestAction\n  | MinedInvestAction\n  | ReadyInvestAction\n  | RequestInvestAction\n  | SeccessInvestAction\n  | FailureInvestAction\n  | MessageInvestAction\n  | AccountInvestRequestAction\n  | AccountInvestSuccessAction\n  | AccountInvestFailureAction\n","import {\n  InvestActionTypes,\n  DefaultInvestState,\n  INVEST_MESSAGES,\n  INVEST_TRANSACTION_READY,\n} from '../_types/invest.types'\nimport {\n  INVEST_RESET,\n  INVEST_METHOD_REQUEST,\n  INVEST_METHOD_SUCCESS,\n  INVEST_METHOD_FAILURE,\n  INVEST_ACCOUNT_REQUEST,\n  INVEST_ACCOUNT_SUCCESS,\n  INVEST_ACCOUNT_FAILURE,\n  INVEST_TRANSACTION_MINED,\n} from '../_types/invest.types'\n\nconst account = {\n  satoshi: 0,\n  hourly: 0,\n  percent: 0,\n  referrer: 0,\n  referral: 0,\n  btcb: 0,\n  stts: 0,\n  bnb: 0,\n  deposits: 0,\n  latestWithdraw: 0,\n  depositDetails: [],\n}\n\nconst investReducerDefaultState: DefaultInvestState = {\n  investLoading: false,\n  confirmed: false,\n  maxPercent: 0,\n  error: '',\n  account,\n}\n\nexport const investReducer = (\n  state = investReducerDefaultState,\n  action: InvestActionTypes\n): DefaultInvestState => {\n  switch (action.type) {\n    case INVEST_METHOD_REQUEST:\n      return { ...state, investLoading: true, method: action.payload.method }\n    case INVEST_METHOD_SUCCESS:\n      return {\n        ...state,\n        confirmed: false,\n        transaction: action.payload.transaction,\n      }\n    case INVEST_METHOD_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error,\n        investLoading: false,\n        confirmed: false,\n      }\n    case INVEST_TRANSACTION_MINED:\n      return {\n        ...state,\n        investLoading: false,\n        confirmed: true,\n      }\n    case INVEST_TRANSACTION_READY:\n      return {\n        ...state,\n        investLoading: false,\n        confirmed: false,\n      }\n    case INVEST_MESSAGES:\n      return {\n        ...state,\n        error: action.payload.error,\n      }\n    case INVEST_ACCOUNT_REQUEST:\n      return { ...state, error: '' }\n    case INVEST_ACCOUNT_SUCCESS:\n      return {\n        ...state,\n        account: { ...account, ...action.payload.account },\n        maxPercent: action.payload.maxPercent,\n        error: action.payload.error,\n      }\n    case INVEST_ACCOUNT_FAILURE:\n      return { ...state }\n    case INVEST_RESET:\n      return { ...investReducerDefaultState }\n    default:\n      return state\n  }\n}\n","import { FreezeActionTypes, DefaultFreezeState } from '../_types/freeze.types'\nimport { REQUEST, SUCCESS, FAILURE } from '../_types'\n\nconst freezeReducerDefaultState: DefaultFreezeState = {\n  loading: true,\n  error: 'Not Found',\n}\n\nexport const freezeReducer = (\n  state = freezeReducerDefaultState,\n  action: FreezeActionTypes\n): DefaultFreezeState => {\n  switch (action.type) {\n    case REQUEST.FREEZE:\n    case SUCCESS.FREEZE:\n      return {\n        ...state,\n        loading: false,\n      }\n    case FAILURE.FREEZE:\n      return {\n        ...state,\n        // error: action,\n        loading: false,\n      }\n    default:\n      return state\n  }\n}\n","import { History } from 'history'\nimport { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport { walletReducer } from './wallet.reducer'\nimport { accountReducer } from './account.reducer'\nimport { bankReducer } from './bank.reducer'\nimport { swapReducer } from './swap.reducer'\nimport { investReducer } from './invest.reducer'\nimport { freezeReducer } from './freeze.reducer'\n\nconst rootReducer = (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    account: accountReducer,\n    bank: bankReducer,\n    invest: investReducer,\n    freeze: freezeReducer,\n    swap: swapReducer,\n    wallet: walletReducer,\n  })\n\nexport default rootReducer\n","import { createBrowserHistory } from 'history'\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\n\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from '../_reducers'\nimport { AppActions, AppState } from '../_types'\n\nexport const history = createBrowserHistory()\n\nexport const store = configureStore()\n\nexport default function configureStore(preloadingState?: any) {\n  const composeEnhancer: typeof compose =\n    (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  const store = createStore(\n    createRootReducer(history),\n    preloadingState,\n    composeEnhancer(\n      applyMiddleware(\n        routerMiddleware(history),\n        thunk as ThunkMiddleware<AppState, AppActions>\n      )\n    )\n  )\n\n  return store\n}\n","import { Dispatch } from 'redux'\nimport {\n  WALLET_FAILURE,\n  WALLET_REQUEST,\n  WALLET_ACTIVATED,\n  WALLET_WAITING_MESSAGE,\n  ONBOARDING_REQUEST,\n  CHAIN_CHANGE_REQUEST,\n  CHAIN_CHANGE_SUCCESS,\n  CHAIN_CHANGE_FAILURE,\n  ContractObject,\n  InvestContract,\n  BankContract,\n  PriceContract,\n} from '../_types/wallet.types'\nimport { AppActions, AppState } from '../_types'\nimport { errorHandler, successHandler, warningHandler } from '../_helpers/alert'\nimport { supportedChain, tooShorter } from '../_helpers/constants'\nimport { ethereum } from '../_helpers/api'\nimport chainList from '../_helpers/chainList'\nimport { Contract, providers } from 'ethers'\nimport { onBoard } from '../_helpers/api'\nimport erc20 from '../_contracts/erc20'\nimport bank from '../_contracts/bank'\nimport invest from '../_contracts/invest'\nimport { ACCOUNT_LOGGEDIN, ACCOUNT_LOGOUT } from '../_types/account.types'\nimport { accountTokenBalances } from './account.actions'\nimport { INVEST_RESET } from '../_types/invest.types'\nimport tokenPrice from '../_contracts/tokenPrice'\nimport info from '../_contracts/info'\n\nlet timer: NodeJS.Timeout\nlet interval: NodeJS.Timeout\n\nexport let provider: providers.Web3Provider\nexport let signer: providers.JsonRpcSigner\nexport let tokenContract: ContractObject\nexport let investContract: InvestContract\nexport let bankContract: BankContract\nexport let priceContract: PriceContract\n\nexport const initialization = () => (\n  dispatch: Dispatch<AppActions>,\n  getState: () => AppState\n) => {\n  dispatch({ type: WALLET_REQUEST })\n  if (!getState().wallet.active) {\n    if (ethereum && ethereum.isMetaMask) {\n      provider = new providers.Web3Provider(ethereum, 'any')\n      provider.send('eth_requestAccounts', [])\n      signer = provider.getSigner()\n\n      ethereum.on('chainChanged', () => {\n        window.location.reload()\n      })\n\n      ethereum.on('accountsChanged', (accounts) => {\n        accountHandler(accounts[0])\n      })\n\n      provider.on('network', ({ chainId }) => {\n        dispatch({ type: CHAIN_CHANGE_REQUEST, payload: { chainId } })\n        console.log(chainId)\n        if (supportedChain(chainId)) {\n          tokenContract = {\n            STT: new Contract(erc20.address[chainId].stt, erc20.abi, signer),\n            STTS: new Contract(erc20.address[chainId].stts, erc20.abi, signer),\n            BTCB: new Contract(erc20.address[chainId].btcb, erc20.abi, signer),\n          }\n          investContract = new Contract(\n            invest.address[chainId],\n            invest.abi,\n            signer\n          )\n          bankContract = new Contract(\n            erc20.address[chainId].stt,\n            bank.abi,\n            signer\n          )\n          priceContract = new Contract(\n            tokenPrice.address[chainId].btc,\n            tokenPrice.abi,\n            signer\n          )\n          dispatch({\n            type: WALLET_ACTIVATED,\n            payload: {\n              chainId,\n            },\n          })\n          dispatch({ type: CHAIN_CHANGE_REQUEST, payload: { chainId } })\n          successHandler('Connected To ' + chainList[chainId]?.name)\n        } else {\n          const msg = 'Please Change to Binance Smart Chain Mainnet!'\n          warningHandler(msg)\n          dispatch({\n            type: CHAIN_CHANGE_FAILURE,\n            payload: {\n              error: {\n                code: 301,\n                msg,\n              },\n            },\n          })\n        }\n        ethereum?._metamask.isUnlocked().then((isUnlocked: boolean) => {\n          if (isUnlocked) {\n            signer.getAddress().then((address) => accountHandler(address))\n          } else {\n            accountHandler()\n          }\n        })\n      })\n    } else {\n      dispatch({\n        type: WALLET_FAILURE,\n        error: {\n          msg: 'notAvailable',\n          code: 401,\n        },\n      })\n      const msg = 'MetaMask Is not Available!'\n      errorHandler(msg, WALLET_WAITING_MESSAGE)\n      dispatch({\n        type: WALLET_WAITING_MESSAGE,\n        payload: { error: { msg, code: 401 } },\n      })\n    }\n  }\n\n  const accountHandler = (account?: string) => {\n    dispatch({\n      type: ACCOUNT_LOGOUT,\n    })\n    dispatch({\n      type: INVEST_RESET,\n    })\n    clearTimeout(timer)\n    if (account) {\n      timer = setTimeout(() => {\n        signer.getAddress().then((address) => {\n          dispatch({\n            type: ACCOUNT_LOGGEDIN,\n            payload: { address },\n          })\n          dispatch(\n            accountTokenBalances(address, ['STT', 'STTS', 'BTCB']) as any\n          )\n          successHandler(`Account Changed ${tooShorter(address)}`)\n        })\n      }, 1000)\n    } else {\n      const msg = 'Please unlock your MetaMask!'\n      warningHandler(msg)\n      dispatch({\n        type: WALLET_WAITING_MESSAGE,\n        payload: {\n          error: {\n            code: 301,\n            msg,\n          },\n        },\n      })\n    }\n\n    clearInterval(interval)\n    interval = setInterval(async () => {\n      const accounts = await ethereum?.request({ method: 'eth_accounts' })\n      if (!account && accounts.length > 0) accountHandler(accounts[0])\n      else if (account && accounts.length === 0) accountHandler()\n    }, 1000)\n  }\n}\n\nexport const changeToMain = () => (dispatch: Dispatch<AppActions>) => {\n  dispatch({ type: CHAIN_CHANGE_REQUEST })\n  ethereum\n    ?.request({\n      method: 'wallet_addEthereumChain',\n      params: [\n        {\n          chainId: '0x38',\n          chainName: 'Binance Smart Chain',\n          nativeCurrency: {\n            name: 'Binance Coin',\n            symbol: 'BNB',\n            decimals: 18,\n          },\n          rpcUrls: ['https://bsc-dataseed1.ninicoin.io'],\n          blockExplorerUrls: ['https://bscscan.com'],\n        },\n      ],\n    })\n    .catch((error) => {\n      errorHandler(error.message, WALLET_FAILURE)\n      dispatch({\n        type: WALLET_FAILURE,\n        error: { msg: 'MetaMask Is not Available!', code: 401 },\n      })\n    })\n}\n\nexport const addTokenToWallet = (tokens: string[]) => (\n  dispatch: Dispatch<AppActions>,\n  getState: () => AppState\n) => {\n  tokens.forEach(() => {})\n  const addToken = (token: string) =>\n    new Promise((resolve, reject) => {\n      const chainId = getState().wallet.chainId\n      const address = info[chainId][token]\n      const symbol = token\n      const decimals = info.decimals[token]\n      const image = 'http://placekitten.com/200/300'\n      ethereum\n        ?.request({\n          method: 'wallet_watchAsset',\n          params: {\n            // @ts-ignore\n            type: 'ERC20',\n            options: {\n              address,\n              symbol,\n              decimals,\n              image,\n            },\n          },\n        })\n        .then((result) => resolve(result))\n        .catch((err) => {})\n    })\n}\n\nexport const startOnBoarding = () => (dispatch: Dispatch<AppActions>) => {\n  dispatch({\n    type: ONBOARDING_REQUEST,\n    payload: { error: { msg: 'Waiting for MetaMask!', code: 304 } },\n  })\n  onBoard.startOnboarding()\n}\n","import { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Globe from './components/Globe/Globe'\nimport { Header } from './components/Header'\nimport { FlexDiv } from './components/Layout/divs/Divs'\nimport { AppActions, AppState } from './_types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { initialization } from './_actions/wallet.actions'\nimport ProtectedRoute from './router/ProtectedRoute'\nimport { AppRouter } from './router/AppRouter'\n\nlet setTime: NodeJS.Timeout\n\ntype AppProps = ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps>\n\ninterface AppStates {\n  spacerHeight: number\n  appWidth: number\n}\n\nclass App extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props)\n    this.state = {\n      spacerHeight: 45,\n      appWidth: window.innerWidth,\n    }\n  }\n\n  updateDimensions = () => {\n    clearTimeout(setTime)\n    setTime = setTimeout(() => {\n      this.setState({\n        appWidth: window.innerWidth,\n        spacerHeight: window.innerHeight - 10,\n      })\n    }, 200)\n  }\n\n  componentDidMount() {\n    console.log('initialisation')\n    this.props.init()\n    window.addEventListener('resize', this.updateDimensions)\n    this.setState({\n      spacerHeight: window.innerHeight - 10,\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions)\n  }\n\n  render() {\n    const { appWidth, spacerHeight } = this.state\n    const isMobile = appWidth > 768 ? false : true\n    const globeHeight = spacerHeight * 0.6\n    return (\n      <Router>\n        <FlexDiv>\n          <Header width={appWidth} />\n          <Globe height={globeHeight} width={appWidth} />\n          <ProtectedRoute\n            isMobile={isMobile}\n            height={spacerHeight - globeHeight}\n            component={<AppRouter isMobile={isMobile} />}\n          />\n        </FlexDiv>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  // const {} = state.wallet\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\n  init: bindActionCreators(initialization, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","export default __webpack_public_path__ + \"static/media/earth.55a4257c.jpg\";","export default __webpack_public_path__ + \"static/media/background.597b1ac7.png\";","export default __webpack_public_path__ + \"static/media/clouds.4b42cd1c.png\";","//@ts-nocheck\nimport React, { useState, useEffect, useRef } from 'react'\nimport Globe from 'react-globe.gl'\nimport * as d3 from 'd3'\nimport earth from '../../assets/earth.jpg'\nimport background from '../../assets/background.png'\nimport clouds from '../../assets/clouds.png'\n\ninterface GlobeProps {\n  height: number\n  width: number\n}\n\nconst ReactGlobe: React.FC<GlobeProps> = ({ height, width }) => {\n  const globeEl = useRef()\n  const [popData, setPopData] = useState([])\n\n  useEffect(() => {\n    fetch('/assets/world_population.csv')\n      .then((res) => res.text())\n      .then((csv) =>\n        d3.csvParse(csv, ({ lat, lng, pop }) => ({\n          lat: +lat,\n          lng: +lng,\n          pop: +pop,\n        }))\n      )\n      .then(setPopData)\n  }, []) // [] mean\n\n  useEffect(() => {\n    // Auto-rotate\n    if (globeEl?.current) {\n      globeEl.current.controls().autoRotate = true\n      globeEl.current.controls().autoRotateSpeed = 0.3\n      globeEl.current.camera().setViewOffset(100, 100, 0, -18, 100, 100)\n    }\n  }, [])\n\n  const weightColor = d3\n    .scaleSequentialSqrt(d3.interpolateYlOrRd)\n    .domain([0, 1e7])\n\n  return (\n    <Globe\n      ref={globeEl}\n      height={height}\n      width={width}\n      globeImageUrl={earth}\n      bumpImageUrl={clouds}\n      backgroundImageUrl={background}\n      hexBinPointsData={popData}\n      hexBinPointWeight=\"pop\"\n      hexAltitude={(d) => d.sumWeight * 6e-8}\n      hexBinResolution={4}\n      hexTopColor={(d) => weightColor(d.sumWeight)}\n      hexSideColor={(d) => weightColor(d.sumWeight)}\n      hexBinMerge={true}\n      enablePointerInteraction={false}\n    />\n  )\n}\n\nexport default ReactGlobe\n","export const messages = {\n  available:\n    '🦊 Please click Connect button for connection to Binance Smart Chain using Metamask!',\n  notAvailable: '🦊 Please install Metamask into your browser: ',\n  itsMobile: '🦊 Please use Metamask App!',\n  loading: 'Loading...',\n}\n\nexport const supportedChain = (chainId?: number) =>\n  chainId === 56 || chainId === 97\n\nexport const getTheTime = (minutes: number = 0): number => {\n  var d = new Date()\n  var t = d.getTime()\n  const ms = minutes * 60000\n  return t + ms / 1000\n}\n\nexport const UniqId = (): string => {\n  return getTheTime(Math.random()).toString(36)\n}\n\nexport const shorter = (str: any) =>\n  str?.length > 8 ? str.slice(0, 10) + '...' + str.slice(-4) : str\n\nexport const tooShorter = (str: any) =>\n  str?.length > 8 ? str.slice(0, 2) + '...' + str.slice(-4) : str\n\nexport const sizeCalculator = (width: number) => {\n  const half = width / 2\n  let quarter = half / 2\n  let eighth = quarter / 2\n  const height = 170\n  let fristHeight = height\n  let secondHeight = height\n  let querylimiter = true\n  if (width < 600) {\n    quarter = half / 1.2\n    eighth = quarter / 1.6\n    fristHeight = height - 40\n    secondHeight = height - 15\n    querylimiter = false\n  }\n  const linkArray = [\n    {\n      positionX: half - quarter,\n      positionY: fristHeight - 54,\n      size: 15,\n      link: 'info',\n      text: 'Info',\n    },\n    {\n      positionX: half - eighth,\n      positionY: secondHeight - 29,\n      size: 20,\n      link: 'freeze',\n      text: 'Freeze',\n    },\n    {\n      positionX: half,\n      positionY: height - 10,\n      size: 35,\n      link: 'invest',\n      text: 'Invest',\n    },\n    {\n      positionX: half + eighth,\n      positionY: secondHeight - 29,\n      size: 20,\n      link: 'swap',\n      text: 'Swap',\n    },\n    {\n      positionX: half + quarter,\n      positionY: fristHeight - 54,\n      size: 15,\n      link: 'stts',\n      text: 'STTS',\n    },\n  ]\n  return { half, quarter, linkArray, eighth, height, querylimiter }\n}\n","const Colors = {\n  background: '#2d2d2d',\n  green: '#1AE285',\n  red: '#ff1d4e',\n  text: 'white',\n  secondText: '#ffffff73',\n}\nexport default Colors\n","import { Link } from 'react-router-dom'\nimport Colors from '../../../Theme/Colors'\n\ninterface HeadCircleProps {\n  positionX: number\n  positionY: number\n  size: number\n  text: string\n  link: string\n  onClick: () => void\n  active: boolean\n}\n\nexport const HeadCircle: React.FC<HeadCircleProps> = ({\n  positionX,\n  positionY,\n  size,\n  onClick,\n  active,\n  text,\n  link,\n}) => {\n  return (\n    <g onClick={onClick}>\n      <Link to={link}>\n        <circle\n          cx={positionX}\n          cy={positionY - size}\n          r={size}\n          stroke={active ? Colors.text : Colors.secondText}\n          strokeWidth=\"1\"\n          fill={Colors.background}\n        />\n        <text\n          x={positionX}\n          y={positionY - size}\n          textAnchor=\"middle\"\n          alignmentBaseline=\"central\"\n          fontSize={size / 2}\n          fontWeight=\"700\"\n          fill={active ? Colors.text : Colors.secondText}\n        >\n          {text}\n        </text>\n      </Link>\n    </g>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Logo.d665c7e5.png\";","import styled from '@emotion/styled'\nimport React from 'react'\nimport Logo from '../../../assets/Logo.png'\n\nconst StyledImage = styled.image`\n  cursor: pointer;\n`\n\ninterface ImageLogoProps {\n  x: number\n  y: number\n  active?: boolean\n}\n\nexport const ImageLogo: React.FC<ImageLogoProps> = ({\n  active,\n  ...position\n}) => {\n  return (\n    <StyledImage\n      {...position}\n      width=\"60\"\n      height=\"60\"\n      xlinkHref={Logo}\n      onClick={() => console.log('index')}\n    />\n  )\n}\n","import styled from '@emotion/styled'\nimport React, { useState } from 'react'\nimport { sizeCalculator } from '../../_helpers/constants'\nimport { HeadCircle } from '../Layout/svgs/HeadCircle'\nimport { ImageLogo } from '../Layout/svgs/ImageLogo'\n\nconst StyledSvg = styled.svg`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 10;\n`\n\ninterface HeaderProps {\n  width: number\n}\n\nexport const Header: React.FC<HeaderProps> = ({ width }) => {\n  const [active, setActive] = useState(2)\n\n  const { half, quarter, height, linkArray } = sizeCalculator(width)\n\n  return (\n    <StyledSvg height={height + 10} width={width}>\n      <defs>\n        <clipPath id=\"circleView\">\n          <circle cx={half} cy={10} r=\"80\" />\n        </clipPath>\n      </defs>\n      <path\n        stroke=\"rgb(150, 150, 150)\"\n        strokeDasharray=\"1 6\"\n        fill=\"rgb(0, 0, 0,0.0)\"\n        d={`M0,0 C${half - quarter},${height} ${\n          half + quarter\n        },${height} ${width},0`}\n      />\n      <ImageLogo x={half - 28} y={20} active />\n      {linkArray.map((item, index) => (\n        <HeadCircle\n          {...item}\n          key={index}\n          active={active === index}\n          onClick={() => setActive(index)}\n        />\n      ))}\n    </StyledSvg>\n  )\n}\n","import Colors from '../../../Theme/Colors'\nimport styled from '@emotion/styled'\nimport Row from 'antd/lib/row'\n\ninterface StyledFlexDivProps {\n  hoverColor?: string\n  borderColor?: string\n  width?: string\n}\n\nexport const StyledFlexDiv = styled(\n  ({ width, hoverColor, borderColor, ...props }: StyledFlexDivProps) => (\n    <div {...props} />\n  )\n)`\n  display: flex;\n  flex-wrap: nowrap;\n  width: ${({ width }) => (width ? width : '100%')};\n  margin: auto;\n  border: 1px solid\n    ${({ borderColor }) => (borderColor ? borderColor : '#2e2e2e')};\n  &:hover {\n    color: ${({ hoverColor }) => (hoverColor ? hoverColor : Colors.green)};\n  }\n`\n\nexport const AbsoluteBody = styled.div`\n  text-align: center;\n  width: 100vw;\n  position: absolute;\n  z-index: 10;\n`\n\nexport const FlexDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport const RowBody = styled(Row)`\n  justify-content: space-evenly;\n  position: relative;\n`\n\nexport const StyledRow = styled(Row)`\n  justify-content: space-between;\n  align-items: baseline;\n  padding: 0 20px;\n`\ninterface DivHeightProps {\n  height?: number\n}\n\nexport const RelativeBody = styled(({ height, ...props }: DivHeightProps) => (\n  <div {...props} />\n))`\n  min-height: ${({ height }) => height + 'px'};\n  text-align: center;\n  position: relative;\n`\n\nexport const SpacerDiv = styled(({ height, ...props }: DivHeightProps) => (\n  <div {...props} />\n))`\n  height: ${({ height }) => height + 'px'};\n  z-index: 0;\n`\n","export const SHOW_SNACKBAR = 'SHOW_SNACKBAR'\nexport const CLEAR_SNACKBAR = 'CLEAR_SNACKBAR'\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR'\n\nexport interface DefaultSnackState {\n  type?: string\n  snackbars?: ISnack[]\n}\nexport type ISnack = {\n  message: string\n  key: string\n  dismissed?: boolean\n}\n\nexport interface SeccessSnackAction {\n  type: typeof SHOW_SNACKBAR\n  snackbar: ISnack\n}\nexport interface ClearSnackAction {\n  type: typeof CLEAR_SNACKBAR\n  dismissAll?: boolean\n  key?: string\n}\nexport interface RemoveSnackAction {\n  type: typeof REMOVE_SNACKBAR\n  key: string\n}\n\nexport type SnackActionTypes =\n  | SeccessSnackAction\n  | ClearSnackAction\n  | RemoveSnackAction\n","export default {\n  '1': {\n    name: 'Ethereum Mainnet',\n    chainId: 1,\n    shortName: 'eth',\n    chain: 'ETH',\n    network: 'mainnet',\n    networkId: 1,\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18,\n    },\n    rpc: [\n      'https://mainnet.infura.io/v3/${INFURA_API_KEY}',\n      'wss://mainnet.infura.io/ws/v3/${INFURA_API_KEY}',\n      'https://api.mycryptoapi.com/eth',\n      'https://cloudflare-eth.com',\n    ],\n    faucets: [],\n    explorers: [\n      {\n        name: 'etherscan',\n        url: 'https://etherscan.io',\n        standard: 'EIP3091',\n      },\n    ],\n    infoURL: 'https://ethereum.org',\n  },\n  '2': {\n    name: 'Expanse Network',\n    chainId: 2,\n    shortName: 'exp',\n    chain: 'EXP',\n    network: 'mainnet',\n    networkId: 1,\n    nativeCurrency: {\n      name: 'Expanse Network Ether',\n      symbol: 'EXP',\n      decimals: 18,\n    },\n    rpc: ['https://node.expanse.tech'],\n    faucets: [],\n    explorers: [],\n    infoURL: 'https://expanse.tech',\n  },\n  '3': {\n    name: 'Ethereum Testnet Ropsten',\n    chainId: 3,\n    shortName: 'rop',\n    chain: 'ETH',\n    network: 'ropsten',\n    networkId: 3,\n    nativeCurrency: {\n      name: 'Ropsten Ether',\n      symbol: 'ROP',\n      decimals: 18,\n    },\n    rpc: [\n      'https://ropsten.infura.io/v3/${INFURA_API_KEY}',\n      'wss://ropsten.infura.io/ws/v3/${INFURA_API_KEY}',\n    ],\n    faucets: ['https://faucet.ropsten.be?${ADDRESS}'],\n    explorers: [],\n    infoURL: 'https://github.com/ethereum/ropsten',\n  },\n  '4': {\n    name: 'Ethereum Testnet Rinkeby',\n    chainId: 4,\n    shortName: 'rin',\n    chain: 'ETH',\n    network: 'rinkeby',\n    networkId: 4,\n    nativeCurrency: {\n      name: 'Rinkeby Ether',\n      symbol: 'RIN',\n      decimals: 18,\n    },\n    rpc: [\n      'https://rinkeby.infura.io/v3/${INFURA_API_KEY}',\n      'wss://rinkeby.infura.io/ws/v3/${INFURA_API_KEY}',\n    ],\n    faucets: ['https://faucet.rinkeby.io'],\n    explorers: [\n      {\n        name: 'etherscan-rinkeby',\n        url: 'https://rinkeby.etherscan.io',\n        standard: 'EIP3091',\n      },\n    ],\n    infoURL: 'https://www.rinkeby.io',\n  },\n  '5': {\n    name: 'Ethereum Testnet Görli',\n    chainId: 5,\n    shortName: 'gor',\n    chain: 'ETH',\n    network: 'goerli',\n    networkId: 5,\n    nativeCurrency: {\n      name: 'Görli Ether',\n      symbol: 'GOR',\n      decimals: 18,\n    },\n    rpc: [\n      'https://rpc.goerli.mudit.blog/',\n      'https://rpc.slock.it/goerli ',\n      'https://goerli.prylabs.net/',\n    ],\n    faucets: [\n      'https://goerli-faucet.slock.it/?address=${ADDRESS}',\n      'https://faucet.goerli.mudit.blog',\n    ],\n    explorers: [],\n    infoURL: 'https://goerli.net/#about',\n  },\n  '42': {\n    name: 'Ethereum Testnet Kovan',\n    chainId: 42,\n    shortName: 'kov',\n    chain: 'ETH',\n    network: 'kovan',\n    networkId: 42,\n    nativeCurrency: {\n      name: 'Kovan Ether',\n      symbol: 'KOV',\n      decimals: 18,\n    },\n    rpc: [\n      'https://kovan.poa.network',\n      'http://kovan.poa.network:8545',\n      'https://kovan.infura.io/v3/${INFURA_API_KEY}',\n      'wss://kovan.infura.io/ws/v3/${INFURA_API_KEY}',\n      'ws://kovan.poa.network:8546',\n    ],\n    faucets: [\n      'https://faucet.kovan.network',\n      'https://gitter.im/kovan-testnet/faucet',\n    ],\n    explorers: [],\n    infoURL: 'https://kovan-testnet.github.io/website',\n  },\n  '43': {\n    name: 'Darwinia Pangolin Testnet',\n    chainId: 43,\n    shortName: 'darwinia',\n    chain: 'pangolin',\n    network: 'free testnet',\n    networkId: 43,\n    nativeCurrency: {\n      name: 'Pangolin RING',\n      symbol: 'PRING',\n      decimals: 9,\n    },\n    rpc: [],\n    faucets: [],\n    explorers: [],\n    infoURL: 'https://darwinia.network/',\n  },\n  '44': {\n    name: 'Darwinia Crab Network',\n    chainId: 44,\n    shortName: 'crab',\n    chain: 'crab',\n    network: 'Crab network',\n    networkId: 44,\n    nativeCurrency: {\n      name: 'Crab Token',\n      symbol: 'CRING',\n      decimals: 9,\n    },\n    rpc: [],\n    faucets: [],\n    explorers: [],\n    infoURL: 'https://crab.network/',\n  },\n  '50': {\n    name: 'XinFin Network Mainnet',\n    chainId: 50,\n    shortName: 'xdc',\n    chain: 'XDC',\n    network: 'mainnet',\n    networkId: 50,\n    nativeCurrency: {\n      name: 'XinFin',\n      symbol: 'XDC',\n      decimals: 18,\n    },\n    rpc: ['https://rpc.xinfin.network'],\n    faucets: [],\n    explorers: [],\n    infoURL: 'https://xinfin.org',\n  },\n  '56': {\n    name: 'Binance Smart Chain Mainnet',\n    chainId: 56,\n    shortName: 'bnb',\n    chain: 'BSC',\n    network: 'mainnet',\n    networkId: 56,\n    nativeCurrency: {\n      name: 'Binance Chain Native Token',\n      symbol: 'BNB',\n      decimals: 18,\n    },\n    rpc: [\n      'https://bsc-dataseed1.binance.org',\n      'https://bsc-dataseed2.binance.org',\n      'https://bsc-dataseed3.binance.org',\n      'https://bsc-dataseed4.binance.org',\n      'https://bsc-dataseed1.defibit.io',\n      'https://bsc-dataseed2.defibit.io',\n      'https://bsc-dataseed3.defibit.io',\n      'https://bsc-dataseed4.defibit.io',\n      'https://bsc-dataseed1.ninicoin.io',\n      'https://bsc-dataseed2.ninicoin.io',\n      'https://bsc-dataseed3.ninicoin.io',\n      'https://bsc-dataseed4.ninicoin.io',\n      'wss://bsc-ws-node.nariox.org',\n    ],\n    faucets: [],\n    explorers: [\n      {\n        name: 'bscscan',\n        url: 'https://bscscan.com',\n        standard: 'EIP3091',\n      },\n    ],\n    infoURL: 'https://www.binance.org',\n  },\n  '97': {\n    name: 'Binance Smart Chain Testnet',\n    chainId: 97,\n    shortName: 'bnbt',\n    chain: 'BSC',\n    network: 'Chapel',\n    networkId: 97,\n    nativeCurrency: {\n      name: 'Binance Chain Native Token',\n      symbol: 'tBNB',\n      decimals: 18,\n    },\n    rpc: [\n      'https://data-seed-prebsc-1-s1.binance.org:8545',\n      'https://data-seed-prebsc-2-s1.binance.org:8545',\n      'https://data-seed-prebsc-1-s2.binance.org:8545',\n      'https://data-seed-prebsc-2-s2.binance.org:8545',\n      'https://data-seed-prebsc-1-s3.binance.org:8545',\n      'https://data-seed-prebsc-2-s3.binance.org:8545',\n    ],\n    faucets: ['https://testnet.binance.org/faucet-smart'],\n    explorers: [\n      {\n        name: 'bscscan-testnet',\n        url: 'https://testnet.bscscan.com',\n        standard: 'EIP3091',\n      },\n    ],\n    infoURL: 'https://testnet.binance.org/',\n  },\n  '99': {\n    name: 'POA Network Core',\n    chainId: 99,\n    shortName: 'skl',\n    chain: 'POA',\n    network: 'core',\n    networkId: 99,\n    nativeCurrency: {\n      name: 'POA Network Core Ether',\n      symbol: 'SKL',\n      decimals: 18,\n    },\n    rpc: [\n      'https://core.poanetwork.dev',\n      'http://core.poanetwork.dev:8545',\n      'https://core.poa.network',\n      'ws://core.poanetwork.dev:8546',\n    ],\n    faucets: [],\n    explorers: [],\n    infoURL: 'https://poa.network',\n  },\n  '100': {\n    name: 'xDAI Chain',\n    chainId: 100,\n    shortName: 'xdai',\n    chain: 'XDAI',\n    network: 'mainnet',\n    networkId: 100,\n    nativeCurrency: {\n      name: 'xDAI',\n      symbol: 'xDAI',\n      decimals: 18,\n    },\n    rpc: [\n      'https://rpc.xdaichain.com',\n      'https://xdai.poanetwork.dev',\n      'wss://rpc.xdaichain.com/wss',\n      'wss://xdai.poanetwork.dev/wss',\n      'http://xdai.poanetwork.dev',\n      'https://dai.poa.network',\n      'ws://xdai.poanetwork.dev:8546',\n    ],\n    faucets: [],\n    explorers: [],\n    infoURL: 'https://forum.poa.network/c/xdai-chain',\n  },\n}\n","import React from 'react'\nimport notification from 'antd/lib/notification'\nimport { store } from '../_store/store.config'\nimport { SHOW_SNACKBAR } from '../_types/snackbar.types'\nimport chainList from './chainList'\nimport { shorter } from './constants'\nimport Button from 'antd/lib/button'\n\nexport const errorHandler = (err: any, type?: any, link?: string): void => {\n  let error = errorCompiler(err)\n  console.log(error, err, type, link)\n  if (error) {\n    if (type) store.dispatch({ type, payload: { error } })\n    store.dispatch({\n      type: SHOW_SNACKBAR,\n      snackbar: snackBarMaker(error, 'error', link),\n    })\n  }\n}\nexport const successHandler = (err: any, type?: any, link?: string): void => {\n  let error = errorCompiler(err)\n  if (type) store.dispatch({ type, payload: { error } })\n  store.dispatch({\n    type: SHOW_SNACKBAR,\n    snackbar: snackBarMaker(error, 'success', link),\n  })\n}\nexport const warningHandler = (err: any, type?: any, link?: string): void => {\n  let error = errorCompiler(err)\n  if (type) store.dispatch({ type, payload: { error } })\n  store.dispatch({\n    type: SHOW_SNACKBAR,\n    snackbar: snackBarMaker(error, 'warning', link),\n  })\n}\n\nconst errorCompiler = (err: string | any) =>\n  typeof err === 'string'\n    ? err.replace(/<[^>]+>/g, '')\n    : typeof err === 'object'\n    ? err?.data?.message.split('::')[1]\n    : 'Message Not Found!'\n\nexport const snackBarMaker = (\n  message: string,\n  variant: 'error' | 'success' | 'warning',\n  link?: React.ReactNode\n) => {\n  let txLink = ''\n  let btn\n  if (link) {\n    const chainId = store.getState().wallet.chainId\n    const url = chainList[chainId].explorers[0].url\n    txLink = `${url}/tx/${link}`\n    btn = (\n      <Button\n        type=\"text\"\n        size=\"large\"\n        onClick={() => window.open(txLink, '_blank')}\n      >\n        {shorter(link)}\n      </Button>\n    )\n  }\n\n  notification[variant]({\n    message,\n    placement: 'bottomRight',\n    duration: variant === 'success' ? 5 : 10,\n    btn,\n  })\n}\n","export default {\n  address: {\n    56: {\n      stt: '0xbBe476b50D857BF41bBd1EB02F777cb9084C1564',\n      stts: '0x88469567A9e6b2daE2d8ea7D8C77872d9A0d43EC',\n      btcb: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    97: {\n      stt: '0x6DFcd84CD2DF9fC3663056c3CbE9F6b5C2Ca6855',\n      stts: '0xBFd0Ac6cD15712E0a697bDA40897CDc54b06D7Ef',\n      btcb: '0x3c26729bb1Cf37d18EFdF3bb957f5e0de5c2Cb12',\n    },\n  },\n  decimals: {\n    bnb: 18,\n    stt: 8,\n    stts: 8,\n    btcb: 18,\n    btc: 18,\n    BNB: 18,\n    STT: 8,\n    STTS: 8,\n    BTCB: 18,\n    BTC: 18,\n  },\n  abi: [\n    'function name() view returns (string)',\n    'function symbol() view returns (string)',\n    'function totalSupply() view returns (uint)',\n    'function balanceOf(address) view returns (uint)',\n    'function transfer(address to, uint amount)',\n    'function approve(address spender, uint256 amount)',\n    'function allowance(address owner, address spender) public view returns (uint256)',\n    'event Transfer(address indexed from, address indexed to, uint amount)',\n  ],\n}\n","import { BigNumberish, utils } from 'ethers'\nimport erc20 from '../_contracts/erc20'\nimport MetaMaskOnboarding from '@metamask/onboarding'\n\nexport const { ethereum } = window\n\nexport const onBoard = new MetaMaskOnboarding()\n\nexport const bytesFormater = (balance: any) => parseInt(balance._hex)\n\nexport const formater = (balance: BigNumberish, token: string | number = 0) =>\n  utils.formatUnits(\n    balance,\n    typeof token === 'number' ? token : erc20.decimals[token]\n  )\n\nexport const formatToString = (balance: number, token: string | number = 0) =>\n  '' +\n  balance * 10 ** (typeof token === 'number' ? token : erc20.decimals[token])\n\nexport const formaterNumber = (\n  balance: BigNumberish,\n  token: string | number = 0\n) => {\n  const decimal =\n    typeof token === 'number'\n      ? token\n      : erc20.decimals[token]\n      ? erc20.decimals[token]\n      : 0\n  return Number(formater(balance, decimal))\n}\nexport const roundDecimals = (value: number, decimal: number = 2) =>\n  Math.round(value * 10 ** decimal) / 10 ** decimal\n\nexport const percentToValue = (val: number, per: number) => (val * per) / 100\n\nexport const valueToPercent = (val: number, max: number) =>\n  roundDecimals((val / max) * 100)\n","export default {\n  address: {\n    56: '0xbBe476b50D857BF41bBd1EB02F777cb9084C1564',\n    97: '0x6DFcd84CD2DF9fC3663056c3CbE9F6b5C2Ca6855',\n  },\n  abi: [\n    'event Activated(address indexed by, address indexed user)',\n    'event Withdraw(address indexed from, address indexed user, uint256 amount)',\n    'event Deposit(address indexed by, address indexed user, uint256 satoshi, uint256 amount)',\n    'event DepositToken(address indexed token,address indexed by,address indexed user,uint256 amount)',\n    'event WithdrawToken(address indexed token,address indexed from,address indexed user,uint256 amount)',\n    'function sttPrice() external view returns (uint256)',\n    'function STTS() external view returns (address)',\n    'function BTCB() external view returns (address)',\n    'function totalSupply() external view returns (uint256)',\n    'function totalSatoshi() external view returns (uint256 stts,uint256 btc,uint256 bnb)',\n    'function totalBalances() external view returns (uint256 stts,uint256 btc,uint256 bnb)',\n    'function btcToSatoshi(uint256 value_) external view returns (uint256)',\n    'function bnbToSatoshi(uint256 value_) external view returns (uint256)',\n    'function sttsToSatoshi(uint256 value_) external view returns (uint256)',\n    'function btcToBnbPrice() external view returns (uint256)',\n    'function sttsToBnb(uint256 value_) external view returns (uint256)',\n    'function sttsToBnbPrice() external view returns (uint256)',\n    'function userBalances(address user_, address contract_) external view returns (bool isActive,uint256 bnb,uint256 satoshi)',\n    'function userTokens(address token_, address user_,address contract_) external view returns (uint256)',\n  ],\n}\n","export default {\n  address: {\n    56: '0x8f2974a63C3Df971d1A8ff5FdCebC49ae05948E3',\n    97: '0x96Ab5e8812099509Eb62D236aE24D3E0117D3D36',\n  },\n  abi: [\n    'event UpdateUser(address indexed user, uint256 value)',\n    'event WithdrawInterest(address indexed user, uint256 hourly, uint256 referrals)',\n    'event RegisterUser(address indexed user, address indexed referrer, uint256 value)',\n    'function users(address) public view returns (uint256 id,uint256 refID,uint256 refAmounts,uint256 refPercent,uint256 latestWithdraw)',\n    'function maxPercent() public view returns (uint256)',\n    'function totalReward(uint256 value) public view returns (uint256)',\n    'function hourlyReward(uint256 value) public view returns (uint256)',\n    'function calculatePercent(address user, uint256 value) public view returns (uint256)',\n    'function investBnb(address referrer) public payable returns (bool)',\n    'function investStts(address referrer, uint256 value) public returns (bool)',\n    'function investBtcb(address referrer, uint256 value) public returns (bool)',\n    'function updateBnb() public payable returns (bool)',\n    'function updateStts(uint256 value) public returns (bool)',\n    'function updateBtcb(uint256 value) public returns (bool)',\n    'function withdrawInterest() public returns (bool)',\n    'function calculateInterest(address sender) public view returns (uint256 hourly,uint256 referral,uint256 requestTime)',\n    'function userBalances(address user) public view returns (uint256 bnb,uint256 btcb,uint256 stts,uint256 satoshi)',\n    'function userDepositNumber(address user) public view returns (uint256)',\n    'function userDepositDetails(address user, uint256 index) public view returns (uint256 reward, uint256 endTime)',\n    'function userExpireTime(address user) public view returns (uint256)',\n    'function userExpired(address user) public view returns (bool)',\n  ],\n}\n","export default {\n  address: {\n    56: { btc: '0x264990fbd0a4796a3e3d8e37c4d5f87a3aca5ebf' },\n    97: { btc: '0x5741306c21795fdcbb9b265ea0255f499dfe515c' },\n  },\n  decimals: 8,\n  abi: ['function latestAnswer() view returns (int256 answer)'],\n}\n","export default {\n  address: {\n    '0xbbe476b50d857bf41bbd1eb02f777cb9084c1564': { name: 'stt', network: 56 },\n    '0x88469567a9e6b2dae2d8ea7d8c77872d9a0d43ec': { name: 'stts', network: 56 },\n    '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c': { name: 'btcb', network: 56 },\n    '0x6dfcd84cd2df9fc3663056c3cbe9f6b5c2ca6855': { name: 'stt', network: 97 },\n    '0xbfd0ac6cd15712e0a697bda40897cdc54b06d7ef': { name: 'stts', network: 97 },\n    '0x3c26729bb1cf37d18efdf3bb957f5e0de5c2cb12': { name: 'btcb', network: 97 },\n    '0x8f2974a63c3df971d1a8ff5fdcebc49ae05948e3': {\n      name: 'invest',\n      network: 56,\n    },\n    '0x96ab5e8812099509eb62d236ae24d3e0117d3d36': {\n      name: 'invest',\n      network: 97,\n    },\n  },\n  decimals: {\n    STT: 8,\n    STTS: 8,\n    BTCB: 18,\n  },\n  56: {\n    STT: '0xbBe476b50D857BF41bBd1EB02F777cb9084C1564',\n    STTS: '0x88469567A9e6b2daE2d8ea7D8C77872d9A0d43EC',\n    BTCB: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n  },\n  97: {\n    STT: '0x6DFcd84CD2DF9fC3663056c3CbE9F6b5C2Ca6855',\n    STTS: '0xBFd0Ac6cD15712E0a697bDA40897CDc54b06D7Ef',\n    BTCB: '0x3c26729bb1Cf37d18EFdF3bb957f5e0de5c2Cb12',\n  },\n}\n","import { Dispatch } from 'react'\nimport { AppActions, AppState } from '../_types'\nimport { errorHandler } from '../_helpers/alert'\nimport { formaterNumber } from '../_helpers/api'\nimport {\n  ACCOUNT_BALANCE_REQUEST,\n  ACCOUNT_BALANCE_SUCCESS,\n  ACCOUNT_BALANCE_FAILURE,\n  CHANGE_THEME,\n} from '../_types/account.types'\nimport { ContractNames } from '../_types/wallet.types'\nimport { bankContract, provider, tokenContract } from './wallet.actions'\nimport { SmartWorldMethod } from '../_types/ISmartWorld'\n\nexport const accountTokenBalances = (\n  address: string,\n  tokens: ContractNames[]\n) => (dispatch: Dispatch<AppActions>) => {\n  if (tokenContract) {\n    dispatch({ type: ACCOUNT_BALANCE_REQUEST })\n    Promise.all(\n      tokens.map((token) =>\n        new Promise((resolve) =>\n          tokenContract[token]\n            .balanceOf(address)\n            .then((res) =>\n              resolve({ token, balance: formaterNumber(res, token) })\n            )\n        ).catch((err) => console.log(err))\n      )\n    )\n      .then((data: any) => {\n        provider.getBalance(address).then((res) => {\n          let error\n          let balance = formaterNumber(res, 'BNB')\n          if (Number(balance) <= 0.001) {\n            error = 'You need BNB for transaction fee!'\n          }\n          if (balance > 0.01) balance = balance - 0.01\n          data.push({ token: 'BNB', balance })\n          const tokens = data.reduce(\n            (items, item) => ({\n              ...items,\n              [item.token]: item.balance,\n            }),\n            {}\n          )\n          dispatch({\n            type: ACCOUNT_BALANCE_SUCCESS,\n            payload: {\n              tokens,\n              error,\n            },\n          })\n        })\n      })\n      .catch((err) => errorHandler(err, ACCOUNT_BALANCE_FAILURE))\n  }\n}\n\nexport const requestBank = async (\n  method: SmartWorldMethod,\n  args: any = null\n): Promise<any> =>\n  new Promise((resolve, reject) => {\n    bankContract[method](args)\n      .then((res) => resolve(res))\n      .catch((err) => reject(err))\n  })\n\nexport const changeTheme = (theme: 'light' | 'dark') => (\n  dispatch: Dispatch<AppActions>\n) => {\n  dispatch({ type: CHANGE_THEME, theme })\n}\n","import styled from '@emotion/styled'\nimport { animated } from 'react-spring'\n\nexport const AnimatedSvg = styled(animated.svg)`\n  position: absolute;\n  will-change: transform, opacity;\n  top: 0;\n  left: 0;\n  z-index: 11;\n`\n\nexport const AnimatedDiv = styled(animated.div)`\n  position: absolute;\n  will-change: transform, opacity;\n  z-index: 11;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n`\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 20px;\n  margin: auto;\n  height: 100%;\n  width: 100%;\n`\nexport const ButtonDiv = styled.div`\n  margin: 10px;\n  display: flex;\n  justify-content: space-between;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AppActions, AppState } from '../_types'\nimport { Col } from 'antd/lib/grid'\nimport { RowBody } from '../components/Layout/divs/Divs'\nimport { StyledDiv } from '../components/Layout/divs/Sections'\nimport { changeToMain, startOnBoarding } from '../_actions/wallet.actions'\nimport Typography from 'antd/lib/typography'\nimport Button from 'antd/lib/button'\n\ntype IChangeWallet = { isMobile: boolean } & ReturnType<\n  typeof mapDispatchToProps\n> &\n  ReturnType<typeof mapStateToProps>\n\nconst ChangeWallet: React.FC<IChangeWallet> = ({\n  error,\n  changeToMain,\n  startOnBoarding,\n}) => {\n  console.log(error)\n  return (\n    <RowBody>\n      <Col\n        xs={{ span: 22 }}\n        lg={{ span: 7 }}\n        style={{ textAlign: 'center', paddingTop: 50 }}\n      >\n        <Typography style={{ padding: 50 }}>{error.msg}</Typography>\n        {error.code === 401 && (\n          <Button type=\"primary\" onClick={() => startOnBoarding()}>\n            Install MetaMask\n          </Button>\n        )}\n        {error.code === 301 && (\n          <StyledDiv>\n            <Button type=\"primary\" onClick={() => changeToMain()}>\n              Connect\n            </Button>\n          </StyledDiv>\n        )}\n      </Col>\n    </RowBody>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { error, waiting } = state.wallet\n  return {\n    error,\n    waiting,\n  }\n}\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\n  changeToMain: bindActionCreators(changeToMain, dispatch),\n  startOnBoarding: bindActionCreators(startOnBoarding, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeWallet)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChainWallet from './ChangeWallet'\nimport { RouteProps } from 'react-router'\nimport { AppState } from '../_types'\nimport { supportedChain } from '../_helpers/constants'\nimport { RelativeBody } from '../components/Layout/divs/Divs'\nimport Spin from 'antd/lib/spin'\n\ninterface ParntProps extends RouteProps {\n  component: React.ReactNode\n  isMobile: boolean\n  height: number\n}\n\ntype ProtectedRouteProps = ParntProps & ReturnType<typeof mapStateToProps>\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  component,\n  height,\n  chainId,\n  active,\n  error,\n  waiting,\n  loading,\n  isMobile,\n}) => {\n  return (\n    <Spin\n      spinning={waiting || loading}\n      tip={error.code === 0 ? 'Loading...' : error.msg}\n    >\n      <RelativeBody height={height}>\n        {active && supportedChain(chainId) ? (\n          component\n        ) : (\n          <ChainWallet isMobile={isMobile} />\n        )}\n      </RelativeBody>\n    </Spin>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { chainId, active, waiting, error } = state.wallet\n  const { loading } = state.account\n  return {\n    error,\n    active,\n    chainId,\n    waiting,\n    loading,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n","import { Dispatch } from 'redux'\nimport { errorHandler, warningHandler, successHandler } from '../_helpers/alert'\nimport { investContract, provider, tokenContract } from './wallet.actions'\nimport { SmartInvestMethod } from '../_types/SmartInvest'\nimport {\n  INVEST_TRANSACTION_MINED,\n  INVEST_METHOD_REQUEST,\n  INVEST_METHOD_FAILURE,\n  INVEST_METHOD_SUCCESS,\n  INVEST_ACCOUNT_REQUEST,\n  INVEST_ACCOUNT_FAILURE,\n  INVEST_ACCOUNT_SUCCESS,\n  INVEST_MESSAGES,\n  INVEST_TRANSACTION_READY,\n} from '../_types/invest.types'\nimport { formaterNumber, bytesFormater } from '../_helpers/api'\n\nimport { AppActions, AppState } from '../_types'\nimport { constants, Transaction, utils } from 'ethers'\nimport info from '../_contracts/info'\n\nexport const removeError = () => (dispatch: Dispatch<AppActions>) =>\n  dispatch({ type: INVEST_MESSAGES, payload: { error: '' } })\n\nexport const requestInvest = (method: SmartInvestMethod, args: any) => (\n  dispatch: Dispatch<AppActions>\n) => {\n  dispatch({ type: INVEST_METHOD_REQUEST, payload: { method } })\n  // @ts-ignore\n  investContract.functions[method](...args)\n    .then((transaction: Transaction) => {\n      if (transaction.hash) {\n        console.log(transaction)\n        dispatch({\n          type: INVEST_METHOD_SUCCESS,\n          payload: { transaction },\n        })\n        warningHandler('Transaction Pending', null, transaction.hash)\n        provider.once(transaction.hash, () => {\n          dispatch({\n            type: INVEST_TRANSACTION_MINED,\n          })\n          setTimeout(() => {\n            dispatch({\n              type: INVEST_TRANSACTION_READY,\n            })\n          }, 5000)\n          successHandler('Transaction Confirmed', null, transaction.hash)\n          dispatch(investInformation() as any)\n        })\n      }\n    })\n    .catch((err) => {\n      dispatch({ type: INVEST_METHOD_FAILURE, payload: err })\n      errorHandler(err)\n    })\n}\n\nexport type TokenSymbol = 'STTS' | 'BTCB' | 'BNB'\n\nexport const investmentDeposit = (token: string, value: string) => async (\n  dispatch: Dispatch<AppActions>,\n  getState: () => AppState\n) => {\n  const chainId = getState().wallet.chainId\n  const address = getState().account.address\n  const referrer = getState().router.location.query.ref\n  let allowance\n\n  const accountInfo: any = await readInvest('users', ['id'], [address])\n\n  if (token !== 'BNB')\n    allowance = await tokenContract[token].allowance(address, info[chainId].STT)\n\n  const requestDeposit = async () => {\n    if (accountInfo.id > 0) {\n      if (token === 'STTS')\n        dispatch(requestInvest('updateStts', [value]) as any)\n      else if (token === 'BTCB')\n        dispatch(requestInvest('updateBtcb', [value]) as any)\n      else if (token === 'BNB')\n        dispatch(requestInvest('updateBnb', [{ value }]) as any)\n    } else {\n      let refInfo = utils.isAddress(referrer)\n        ? ((await readInvest('users', ['id'], [referrer])) as { id: number })\n        : { id: 0 }\n      if (refInfo.id > 0) {\n        if (token === 'STTS')\n          dispatch(requestInvest('investStts', [referrer, value]) as any)\n        else if (token === 'BTCB') {\n          dispatch(requestInvest('investBtcb', [referrer, value]) as any)\n        } else if (token === 'BNB')\n          dispatch(requestInvest('investBnb', [referrer, { value }]) as any)\n      } else {\n        errorHandler('No valid referrer found!', INVEST_MESSAGES)\n      }\n    }\n  }\n\n  if (token !== 'BNB' && bytesFormater(allowance) === 0) {\n    dispatch({ type: INVEST_METHOD_REQUEST, payload: { method: 'approve' } })\n\n    tokenContract[token]\n      .approve(info[chainId].STT, constants.MaxUint256)\n      .then((transaction) => {\n        provider.once(transaction.hash, (tx) => {\n          requestDeposit()\n        })\n      })\n      .catch((err) => {\n        dispatch({ type: INVEST_METHOD_FAILURE, payload: err })\n        errorHandler(err)\n      })\n  } else requestDeposit()\n}\n\nexport const withdrawInterest = (address?: string) => async (\n  dispatch: Dispatch<AppActions>\n) => {\n  dispatch(requestInvest('withdrawInterest', []) as any)\n}\n\nexport const investInformation = (address?: string) => async (\n  dispatch: Dispatch<AppActions>,\n  getState: () => AppState\n) => {\n  if (!address) address = getState().account.address\n  dispatch({ type: INVEST_ACCOUNT_REQUEST })\n  const accountInfo: any = await readInvest('users', ['id'], [address])\n  if (accountInfo.id > 0) {\n    const items = [\n      {\n        name: 'calculateInterest',\n        tokens: ['hourly', 'referral'],\n        args: [address],\n      },\n      {\n        name: 'userBalances',\n        tokens: ['bnb', 'btcb', 'satoshi', 'stts'],\n        args: [address],\n      },\n      {\n        name: 'userDepositNumber',\n        tokens: ['deposits'],\n        args: [address],\n      },\n      {\n        name: 'calculatePercent',\n        tokens: ['percent'],\n        args: [address, 0],\n      },\n      { name: 'users', tokens: ['id', 'latestWithdraw'], args: [address] },\n    ]\n\n    Promise.all(\n      items.map((item) => readInvestItems(item.name, item.tokens, item.args))\n    )\n      .then(async (data: any) => {\n        const account: any = {}\n        const maxPercent = await investContract.maxPercent()\n        data.forEach((its) =>\n          its.map((info) => (account[info.item] = info.balance))\n        )\n        dispatch({\n          type: INVEST_ACCOUNT_SUCCESS,\n          payload: { account, maxPercent: bytesFormater(maxPercent) },\n        })\n      })\n      .catch((err) => errorHandler(err, INVEST_ACCOUNT_FAILURE))\n  }\n}\n\nexport const readInvestItems = async (method: any, items: any[], args: any) =>\n  new Promise((resolve, reject) =>\n    investContract[method](...args)\n      .then((res) => {\n        const array: any[] = []\n        items.map((item: string) =>\n          items.length > 1\n            ? array.push({ item, balance: formaterNumber(res[item], item) })\n            : array.push({ item, balance: bytesFormater(res) })\n        )\n        resolve(array)\n      })\n      .catch((err) => reject(err))\n  )\n\nexport const readInvest = async (method: any, items: any[], args: any) =>\n  new Promise((resolve, reject) =>\n    investContract[method](...args)\n      .then((res) => {\n        const array: any[] = []\n        items.map((item: string) =>\n          items.length > 1\n            ? (array[item] = formaterNumber(res[item], item))\n            : (array[item] = bytesFormater(res[item]))\n        )\n        resolve(array)\n      })\n      .catch((err) => reject(err))\n  )\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Colors from '../../../Theme/Colors'\nimport { tooShorter } from '../../../_helpers/constants'\nimport { AppState } from '../../../_types'\n\ninterface AccountAddressProps {}\n\ntype IProps = AccountAddressProps & ReturnType<typeof mapStateToProps>\n\nconst AccountAddress: React.FC<IProps> = ({ address }) => {\n  const [account, setAccount] = useState('0x...')\n\n  useEffect(() => {\n    setAccount(tooShorter(address))\n  }, [address])\n\n  return (\n    <div\n      style={{ textAlign: 'center', fontSize: 13, cursor: 'pointer' }}\n      onClick={() =>\n        account.length > 10\n          ? setAccount(tooShorter(address))\n          : setAccount(address!)\n      }\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 2\" width=\"15px\">\n        <path\n          d=\"M 0.25 0.5 L 1.5 1.25 L 0.25 2 L 0.25 0.5\"\n          fill={Colors.green}\n        />\n      </svg>\n      {account}\n    </div>\n  )\n}\nconst mapStateToProps = (state: AppState) => {\n  const { address } = state.account\n  return {\n    address,\n  }\n}\nexport default connect(mapStateToProps)(AccountAddress)\n","import React from 'react'\nimport { Row } from 'react-grid-system'\nimport { connect } from 'react-redux'\nimport Colors from '../../../../Theme/Colors'\nimport { formaterNumber, roundDecimals } from '../../../../_helpers/api'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AppActions, AppState } from '../../../../_types'\nimport { withdrawInterest } from '../../../../_actions/invest.actions'\n\ninterface IProps {\n  width: number\n}\ntype WithdrawCircleProps = IProps &\n  ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\n\nconst WithdrawSection: React.FC<WithdrawCircleProps> = ({\n  width,\n  latestWithdraw,\n  referral,\n  hourly,\n  withdrawInterest,\n}) => {\n  const half = width / 2\n  const r = half - 10\n  const c = 2 * Math.PI * r\n  const period = 3600\n  const secPast = (Date.now() / 1000 - latestWithdraw) % period\n  const secRemain = period - secPast\n  const pastRadius = c * (secPast / period)\n  return (\n    <Row\n      direction=\"column\"\n      justify=\"around\"\n      align=\"center\"\n      style={{ height: '100%' }}\n    >\n      <svg height={width} width={width}>\n        <defs>\n          <clipPath id=\"cut-off-middle\">\n            <rect x={0} y={half * 0.55} width={width} height={half * 0.9} />\n          </clipPath>\n        </defs>\n        <circle cx={half} cy={half} r={r} fill={Colors.background} />\n        <circle cx={half} cy={half} r={r - 14} fill=\"white\" />\n        <circle\n          cx={half}\n          cy={half}\n          r={r}\n          fill={Colors.background}\n          clipPath=\"url(#cut-off-middle)\"\n        />\n        <circle\n          cx={half}\n          cy={half}\n          r={r}\n          strokeLinecap=\"round\"\n          stroke={Colors.green}\n          strokeWidth={6}\n          fill=\"none\"\n          strokeDashoffset={c * 0.25}\n          strokeDasharray={`${pastRadius} ${c - pastRadius}`}\n        >\n          <animate\n            id=\"remains\"\n            attributeName=\"stroke-dasharray\"\n            values={`${pastRadius} ${c - pastRadius};${c} 0`}\n            dur={secRemain}\n          />\n          <animate\n            id=\"hourly\"\n            begin=\"remains.end\"\n            attributeName=\"stroke-dasharray\"\n            values={`0 ${c};${c} 0`}\n            dur={period}\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n        <text\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          x={half}\n          y={width * 0.16}\n          fontSize=\"8\"\n        >\n          REWARD\n        </text>\n        <text\n          textAnchor=\"middle\"\n          x={half}\n          y={width * 0.25}\n          fontSize={width / 18}\n        >\n          <tspan>{roundDecimals(formaterNumber(hourly, 'STT'), 2)}</tspan>\n          <tspan fill={Colors.green}> STT</tspan>\n        </text>\n        <text\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          x={half}\n          y={width * 0.78}\n          fontSize={width / 18}\n        >\n          <tspan>{roundDecimals(formaterNumber(referral, 'STT'), 2)}</tspan>\n          <tspan fill={Colors.green}> STT</tspan>\n        </text>\n        <text\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          x={half}\n          y={width * 0.85}\n          fontSize=\"8\"\n        >\n          REFERRAL\n        </text>\n        <g onClick={() => withdrawInterest()}>\n          <rect\n            x={30}\n            y={r * 0.87}\n            rx=\"2\"\n            ry=\"2\"\n            width={r * 1.65}\n            height={r * 0.445}\n            strokeWidth=\"1\"\n            radius=\"5\"\n            fill=\"none\"\n            stroke=\"#434343\"\n          />\n          <text\n            textAnchor=\"middle\"\n            fill={Colors.green}\n            x={half}\n            y={half + 6}\n            fontSize={width / 12}\n          >\n            WITHDRAW\n          </text>\n          <rect\n            className=\"withdraw-button\"\n            x={30}\n            y={r * 0.87}\n            rx=\"2\"\n            ry=\"2\"\n            width={r * 1.65}\n            height={r * 0.445}\n            strokeWidth=\"1\"\n            radius=\"5\"\n            fill=\"none\"\n            stroke=\"#434343\"\n          />\n        </g>\n      </svg>\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { error, tokens } = state.account\n  const { hourly, referral, latestWithdraw } = state.invest.account\n  return {\n    error,\n    tokens,\n    hourly,\n    referral,\n    latestWithdraw,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\n  withdrawInterest: bindActionCreators(withdrawInterest, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WithdrawSection)\n","import React from 'react'\nimport Colors from '../../../Theme/Colors'\n\ninterface CircleInputProps extends React.HTMLAttributes<SVGElement> {\n  percent: number\n  width: number\n  token: string\n  onMax: () => void\n}\n\nexport const CircleInput: React.FC<CircleInputProps> = ({\n  percent,\n  width,\n  onClick,\n  onMax,\n  token,\n  ...rest\n}) => {\n  percent = percent > 0 ? percent * 10 : 0\n  const strokeCalculate = () =>\n    `0,${percent % 1000},0,${1000 - (percent % 1000)}`\n\n  return (\n    <svg\n      style={{\n        position: 'absolute',\n        zIndex: 15,\n        top: 0,\n        left: 0,\n        width: width,\n        touchAction: 'none',\n      }}\n      viewBox=\"0 0 360 360\"\n      {...rest}\n    >\n      <g onClick={onClick}>\n        <circle r=\"160\" cx=\"180\" cy=\"180\" fill={Colors.background} />\n        <path\n          fill=\"none\"\n          stroke={percent <= 1000 ? Colors.green : Colors.red}\n          strokeWidth=\"12\"\n          strokeLinecap=\"round\"\n          strokeDasharray={`${percent},1000`}\n          d=\"M 180 20 \n          a 160 160 0 0 1 0 320 \n          a 160 160 0 0 1 0 -320\"\n        />\n        <path\n          fill=\"none\"\n          stroke={percent === Infinity ? 'red' : 'white'}\n          strokeWidth=\"25\"\n          strokeLinecap=\"round\"\n          strokeDasharray={strokeCalculate()}\n          d=\"M180 20.845\n          a 159.155 159.155 0 0 1 0 318.31\n          a 159.155 159.155 0 0 1 0 -318.31\"\n        />\n        <path\n          d=\"M 180 90 L 290 90 C 230 20 130 20 70 90 L 180 90\"\n          fill=\"white\"\n        />\n        <text\n          x=\"175\"\n          y=\"70\"\n          fontSize=\"25\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          {token}\n        </text>\n      </g>\n      <g onClick={() => onMax()}>\n        <path\n          d=\"M 180 270 L 290 270 C 230 340 130 340 70 270 L 180 270\"\n          fill={Colors.green}\n          strokeWidth=\"2\"\n          stroke=\"white\"\n        />\n        <text\n          x=\"175\"\n          y=\"295\"\n          fontSize=\"25\"\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n        >\n          MAX\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import React from 'react'\nimport Input from 'antd/lib/input'\nimport { Row } from 'react-grid-system'\nimport Text from 'antd/lib/typography/Text'\nimport { CircleInput } from './CircleInput'\nimport Colors from '../../../Theme/Colors'\nimport { AppState } from '../../../_types'\nimport { connect } from 'react-redux'\n\ninterface IProps {\n  width: number\n  value: number\n  token: string\n  error?: string\n  percent: number\n  percentHandler: (arg: number) => void\n  inputHandler: (arg: any) => void\n}\n\ntype DepositCircleProps = IProps & ReturnType<typeof mapStateToProps>\n\nconst DepositCircle: React.FC<DepositCircleProps> = ({\n  width,\n  error,\n  value,\n  percent,\n  token,\n  tokens,\n  inputHandler,\n  percentHandler,\n}) => {\n  const roundSlideTune = (event) => {\n    const x = event.pageX || event.touches[0]?.clientX\n    const y = event.pageY || event.touches[0]?.clientY\n    let elPos = event.target.getBoundingClientRect()\n    let dX = 0,\n      dY = 0,\n      cX = elPos.width / 2,\n      cY = elPos.height / 2,\n      eX = x - elPos.left,\n      eY = y - elPos.top\n\n    if (Math.abs(eX - cX) >= Math.abs(eY - cY)) {\n      dX = 150 / 2 + (Math.sign(eX - cX) * 150) / 2\n      dY = 150 / 2 + (((eY - cY) / Math.abs(eX - cX)) * 150) / 2\n    } else {\n      dX = 150 / 2 + (((eX - cX) / Math.abs(eY - cY)) * 150) / 2\n      dY = 150 / 2 + (Math.sign(eY - cY) * 150) / 2\n    }\n    if (Math.abs(eX - cX) >= Math.abs(eY - cY)) {\n      dX = 150 / 2 + (Math.sign(eX - cX) * 150) / 2\n      dY = 150 / 2 + (((eY - cY) / Math.abs(eX - cX)) * 150) / 2\n    } else {\n      dX = 150 / 2 + (((eX - cX) / Math.abs(eY - cY)) * 150) / 2\n      dY = 150 / 2 + (Math.sign(eY - cY) * 150) / 2\n    }\n\n    dX = Math.round((dX / 150) * 100)\n    dY = Math.round((dY / 150) * 100)\n\n    if (0 <= dX && dX < 50 && dY === 0) {\n      percentHandler(100 - Math.round(((50 - dX) / 50) * 12.5))\n    } else if (dX === 0 && 0 <= dY && dY <= 100) {\n      percentHandler(100 - Math.round(12.5 + (dY / 100) * 25))\n    } else if (0 <= dX && dX <= 100 && dY === 100) {\n      percentHandler(100 - Math.round(37.5 + (dX / 100) * 25))\n    } else if (dX === 100 && 0 <= dY && dY <= 100) {\n      percentHandler(100 - Math.round(62.5 + ((100 - dY) / 100) * 25))\n    } else if (50 <= dX && dX <= 100 && dY === 0) {\n      percentHandler(100 - Math.round(87.5 + ((100 - dX) / 50) * 12.5))\n    }\n  }\n\n  const circleSlider = (event) => {\n    if (event.buttons === 1 || event.buttons === 3) {\n      roundSlideTune(event)\n    }\n  }\n\n  const maxButtonHandler = () => {\n    percentHandler(100)\n  }\n\n  return (\n    <Row\n      justify=\"center\"\n      direction=\"column\"\n      style={{\n        position: 'relative',\n        touchAction: 'none',\n        width,\n        height: width,\n      }}\n    >\n      <Row\n        justify=\"around\"\n        direction=\"column\"\n        onTouchMove={roundSlideTune}\n        onMouseMove={circleSlider}\n        style={{\n          width: width * 0.65,\n          height: width / 2,\n          color: error ? Colors.red : '',\n          fontSize: 10,\n          fontWeight: 'bold',\n          margin: 'auto',\n          zIndex: 20,\n        }}\n      >\n        {tokens[token] === 0 ? (\n          <Text type=\"danger\">Zero balance!</Text>\n        ) : (\n          error && <Text type=\"danger\">{error}</Text>\n        )}\n        <Input\n          style={{\n            borderColor: error ? Colors.red : '',\n          }}\n          placeholder=\"0.00\"\n          type=\"number\"\n          size=\"large\"\n          min={0}\n          step={token === 'STTS' ? 1 : 0.01}\n          value={value}\n          onChange={inputHandler}\n        />\n      </Row>\n      <CircleInput\n        percent={percent}\n        width={width}\n        token={token}\n        onClick={roundSlideTune}\n        onMax={maxButtonHandler}\n        onTouchEnd={roundSlideTune}\n        onTouchMove={roundSlideTune}\n        onMouseMove={circleSlider}\n      />\n    </Row>\n  )\n}\nconst mapStateToProps = (state: AppState) => {\n  const { error, tokens } = state.account\n  return {\n    error,\n    tokens,\n  }\n}\nexport default connect(mapStateToProps)(DepositCircle)\n","import React from 'react'\n\nimport { useSpring, animated as a } from 'react-spring'\nimport Colors from '../../../Theme/Colors'\n\ninterface CircleProps {\n  width: number\n  token: string\n  active: boolean\n  info?: string\n  onClick: (arg: string) => void\n}\n\nconst TokenCircle: React.FC<CircleProps> = ({\n  width,\n  active,\n  token,\n  info,\n  onClick,\n}) => {\n  const half = width / 2\n  const r = half - 5\n  const { opacity, transform } = useSpring({\n    opacity: active ? 1 : 0,\n    transform: `rotatey(${active ? 180 : 0}deg) translateX(-40px)`,\n    config: { mass: 5, tension: 500, friction: 80 },\n  })\n  return (\n    <svg height={width} width={width}>\n      <g onClick={() => onClick(token)}>\n        <a.g\n          style={{\n            opacity: opacity.to((o: any) => 1 - o),\n            transform: transform.to((t) => `translateX(40px) ${t}`),\n          }}\n        >\n          <circle\n            cx={half}\n            cy={half}\n            r={r}\n            stroke={active ? Colors.green : 'grey'}\n            strokeWidth=\"2.5\"\n            fill={Colors.background}\n          />\n\n          <text\n            textAnchor=\"middle\"\n            dominantBaseline=\"middle\"\n            x=\"50%\"\n            y=\"53%\"\n            fill=\"white\"\n            fontSize=\"15\"\n          >\n            {token}\n          </text>\n          <text textAnchor=\"middle\" x=\"50%\" y=\"70%\" fill=\"white\" fontSize=\"9\">\n            {info}\n          </text>\n        </a.g>\n        <a.g\n          style={{\n            opacity: opacity,\n            transform: transform.to(\n              (t) => `translateX(40px) rotatey(180deg) ${t}`\n            ),\n          }}\n        >\n          <circle\n            cx={half}\n            cy={half}\n            r={r}\n            stroke={active ? Colors.green : 'grey'}\n            strokeWidth=\"2.5\"\n            fill={Colors.background}\n          />\n          <text\n            textAnchor=\"middle\"\n            x=\"50%\"\n            y=\"53%\"\n            fill=\"white\"\n            dominantBaseline=\"middle\"\n            fontSize=\"15\"\n          >\n            {token}\n          </text>\n          <text textAnchor=\"middle\" x=\"50%\" y=\"70%\" fill=\"white\" fontSize=\"9\">\n            {info}\n          </text>\n        </a.g>\n      </g>\n    </svg>\n  )\n}\nexport default TokenCircle\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Colors from '../../../Theme/Colors'\nimport Statistic, { StatisticProps } from 'antd/lib/statistic'\n\nconst MineSTT = styled.div`\n  display: inline-flex;\n  color: white;\n  height: 10px;\n`\n\nconst TokenP = styled.span`\n  color: ${({ color }) => (color ? color : 'white')};\n`\n\nconst AfterP = styled.p`\n  color: ${({ color }) => (color ? color : 'white')};\n  margin-right: 5px;\n`\n\nconst FlexDiv = styled.div`\n  display: flex;\n`\n\ninterface StringObject {\n  word: string\n  color: string\n}\n\ninterface STTProps {\n  after?: StringObject\n  before?: StringObject\n  word: StringObject\n}\n\ninterface TokenValueProps extends StatisticProps {\n  color?: string\n  value: number | string\n  token?: string\n  tokenColor?: string\n  double?: number\n}\n\nexport const TokenValue: React.FC<TokenValueProps> = (props) => {\n  const { color, token, tokenColor, value, double, title, ...rest } = props\n  return (\n    <Statistic\n      title={title}\n      suffix={\n        double ? (\n          <Statistic\n            valueStyle={{ color: Colors.green }}\n            precision={2}\n            suffix={\n              <TokenP color={tokenColor ? tokenColor : Colors.green}>\n                {token ? token : 'STT'}\n              </TokenP>\n            }\n            prefix=\"+\"\n            value={double}\n          />\n        ) : (\n          <TokenP color={tokenColor ? tokenColor : Colors.green}>\n            {token ? token : 'STT'}\n          </TokenP>\n        )\n      }\n      value={value}\n      {...rest}\n    />\n  )\n}\n\nexport const ColoredWord: React.FC<STTProps> = (props) => {\n  const { before, after, word } = props\n  return (\n    <FlexDiv>\n      {before ? <TokenP color={before.color}>{before.word}</TokenP> : null}\n      <TokenP color={word.color}>{word?.word}</TokenP>\n      {after ? <AfterP color={after.color}>{after.word}</AfterP> : null}\n    </FlexDiv>\n  )\n}\n\nexport const STT = () => (\n  <ColoredWord word={{ color: Colors.green, word: 'STT' }} />\n)\n\nexport const STTS = () => (\n  <ColoredWord\n    word={{ color: Colors.green, word: 'STT' }}\n    after={{ color: Colors.red, word: 'S' }}\n  />\n)\n\nexport const BNB = () => (\n  <ColoredWord word={{ color: Colors.red, word: 'BNB' }} />\n)\n\nexport const BTC = () => (\n  <ColoredWord word={{ color: Colors.red, word: 'BTC' }} />\n)\n\ninterface TokensProps {\n  component?: JSX.Element\n  after?: boolean\n  before?: boolean\n  word?: string\n}\n\nexport const Tokens: React.FC<TokensProps> = (props) => {\n  const { component, before = true, after, word } = props\n  return (\n    <MineSTT>\n      {before && word && word}\n      {component && component}\n      {after && word && word}\n    </MineSTT>\n  )\n}\n","import React from 'react'\nimport Colors from '../../../Theme/Colors'\n\ninterface DepositButtonProps {\n  width: number\n  done: boolean\n  loading: boolean\n  disable?: boolean\n  onClick: () => void\n}\n\nexport const DepositButton: React.FC<DepositButtonProps> = ({\n  width,\n  done,\n  loading,\n  disable,\n  onClick,\n}) => {\n  width = width + 50\n  const half = width / 2\n  const r = half - 30\n  return (\n    <svg height={width - 50} width={width}>\n      <g\n        onClick={disable ? undefined : onClick}\n        className={loading ? 'loadingDeposit' : undefined}\n      >\n        <circle\n          cx={half}\n          cy={half - 25}\n          r={r}\n          strokeLinecap=\"round\"\n          stroke={disable ? 'grey' : Colors.green}\n          strokeWidth=\"2.5\"\n          fill={Colors.background}\n        />\n        <svg\n          viewBox=\"0 0 100 100\"\n          focusable=\"false\"\n          data-icon=\"check\"\n          opacity={loading || done ? '1' : '0.5'}\n          fill={disable ? 'grey' : Colors.green}\n        >\n          {done ? (\n            <path d=\"M76.583 29.11h-4.66c-.653 0-1.273.3-1.673.813L42.763 64.743 29.583 48.043a2.133 2.133 0 0 0-1.673-.813H23.25c-.447 0-.693.513-.42.86l18.26 23.133c.853 1.08 2.493 1.08 3.353 0l32.56-41.26c.273-.34.027-.853-.42-.853z\" />\n          ) : (\n            <path\n              className={loading ? 'doneSplash' : ''}\n              d=\"M48.241 22.052c-5.128.317-10.052 1.934-14.289 4.693-5.069 3.3-9.035 8.118-11.207 13.616-1.868 4.726-2.515 9.722-1.888 14.612.31 2.442.891 4.673 1.815 7.029.805 2.046 1.643 3.65 2.93 5.577 3.637 5.458 8.93 9.458 15.239 11.524 5.234 1.716 10.989 1.901 16.309.521 11.451-2.963 19.965-12.415 21.681-24.057.251-1.676.297-2.363.29-4.356 0-1.452-.033-2.244-.119-2.97-.422-3.656-1.313-6.712-2.884-9.9-4.613-9.392-13.886-15.576-24.38-16.269-.911-.059-2.706-.073-3.498-.02zm2.158 11.114c.845.224 1.564.422 1.591.449 .026.033-.251 1.201-.62 2.607-.37 1.406-.66 2.561-.647 2.574.04 .026 2.534.627 2.548.607 .007-.007.31-1.155.68-2.548.37-1.399.68-2.548.686-2.554.026-.026 3.109.792 3.161.838 .026.026-.244 1.168-.607 2.548-.363 1.373-.667 2.554-.68 2.62-.013.092 .125.172 .706.403 3.392 1.333 5.267 3.089 5.65 5.293.119 .673.04 1.907-.165 2.693-.528 2.033-1.736 3.287-3.716 3.874l-.277.079 .37.224c1.208.726 2.039 1.551 2.495 \n              2.482.422 .865.521 1.3.521 2.29 0 2.607-1.459 5.458-3.379 6.6-1.129.667-2.125.917-3.854.97-1.36.04-2.165-.02-3.736-.284-.561-.092-1.023-.158-1.036-.145-.013.013-.33 1.181-.7 2.594-.37 1.419-.7 2.6-.726 2.633-.04.04-3.128-.706-3.208-.779-.007-.007.297-1.181.673-2.614.376-1.432.667-2.627.64-2.653-.026-.026-.343-.119-.706-.211-.363-.092-.911-.244-1.221-.33-.304-.092-.561-.158-.574-.152-.007.013-.317 1.175-.686 2.587-.37 1.419-.693 2.6-.719 2.627-.053.059-3.102-.713-3.175-.799-.02-.026.271-1.208.647-2.62.37-1.419.68-2.607.68-2.647 0-.086-.02-.092-3.762-1.082-1.597-.422-2.666-.739-2.66-.785.013-.04.376-.871.812-1.841l.799-1.775 1.168.323c1.353.376 1.789.416 2.145.191 .132-.079.297-.244.376-.37.165-.271 3.96-14.652 3.96-15.015 0-.66-.495-1.307-1.195-1.564-.198-.079-.871-.264-1.498-.422-.627-.158-1.129-.323-1.115-.356.013-.04.211-.799.442-1.703.31-1.188.449-1.63.521-1.63.053 0 1.003.238 2.112.535 3.439.911 4.257\n               1.115 4.303 1.063.026-.026.35-1.214.719-2.64.376-1.419.693-2.587.7-2.587.013 0 .713.178 1.558.403zM49.752 42.69c-.013.04-.383 1.439-.818 3.109-.436 1.67-.812 3.082-.825 3.135-.059.191 2.66.851 4.059.997 2.468.244 3.914-.521 4.33-2.297.436-1.855-.884-3.3-3.894-4.277-1.241-.396-2.812-.772-2.851-.667zM47.218 52.313c0 .013-.416 1.591-.924 3.518-.502 1.921-.898 3.518-.871 3.538.066 .066 1.914.561 2.798.752 1.307.277 2.092.376 3.122.383 2.211.02 3.399-.614 3.934-2.105.198-.541.205-1.505.013-1.98-.508-1.287-1.874-2.284-4.244-3.095-.911-.31-3.828-1.076-3.828-1.01z\"\n            ></path>\n          )}\n        </svg>\n        <text\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          x=\"50%\"\n          y=\"53%\"\n          fill=\"white\"\n          fontSize=\"15\"\n          fontWeight=\"bold\"\n        >\n          {done ? '' : loading ? '' : ''}\n        </text>\n      </g>\n    </svg>\n  )\n}\n","import { Dispatch } from 'react'\nimport { AppActions, AppState } from '../_types'\nimport { errorHandler } from '../_helpers/alert'\nimport { bytesFormater, formaterNumber } from '../_helpers/api'\nimport {\n  BANK_TOKEN_BALANCE_REQUEST,\n  BANK_TOKEN_BALANCE_SUCCESS,\n  BANK_TOKEN_BALANCE_FAILURE,\n  BANK_SATOSHI_BALANCE_REQUEST,\n  BANK_SATOSHI_BALANCE_SUCCESS,\n  BANK_SATOSHI_BALANCE_FAILURE,\n  STT_PRICE_FAILURE,\n  STT_PRICE_REQUEST,\n  STT_PRICE_SUCCESS,\n  TOKEN_PRICE_REQUEST,\n  TOKEN_PRICE_SUCCESS,\n  TOKEN_PRICE_FAILURE,\n} from '../_types/bank.types'\nimport { ContractNames } from '../_types/wallet.types'\nimport { bankContract, priceContract, tokenContract } from './wallet.actions'\nimport { SmartWorldMethod } from '../_types/ISmartWorld'\nimport { TokenBalances } from '../_types/account.types'\nimport erc20 from '../_contracts/erc20'\n\nexport const requestBank = async (\n  method: SmartWorldMethod,\n  args: any = null\n): Promise<any> =>\n  new Promise((resolve, reject) => {\n    bankContract[method](args)\n      .then((res) => resolve(res))\n      .catch((err) => reject(err))\n  })\n\nexport const bankTokenBalances = (tokens: ContractNames[]) => (\n  dispatch: Dispatch<AppActions>,\n  getState: () => AppState\n) => {\n  const address = getState().bank.address\n  const chainId = getState().wallet.chainId\n\n  dispatch({ type: BANK_TOKEN_BALANCE_REQUEST })\n  Promise.all(\n    tokens.map(\n      (token) =>\n        new Promise((resolve) =>\n          tokenContract[token]\n            .balanceOf(address[chainId])\n            .then((res) =>\n              resolve({ token, balance: formaterNumber(res, token) })\n            )\n        )\n    )\n  )\n    .then((data: any) => {\n      console.log(data)\n      dispatch({\n        type: BANK_TOKEN_BALANCE_SUCCESS,\n        payload: {\n          tokens: data.reduce(\n            (items, item) => ({\n              ...items,\n              [item.token]: item.balance,\n            }),\n            {}\n          ),\n        },\n      })\n    })\n    .catch((err) => errorHandler(err, BANK_TOKEN_BALANCE_FAILURE))\n}\n\nexport const bankTotalSatoshi = () => (dispatch: Dispatch<AppActions>) => {\n  dispatch({ type: BANK_SATOSHI_BALANCE_REQUEST })\n  requestBank('totalSatoshi')\n    .then((res) => {\n      const data = {} as TokenBalances\n      Object.keys(res).map((key) => {\n        if (key.length > 1) data[key] = formaterNumber(res[key])\n      })\n      dispatch({\n        type: BANK_SATOSHI_BALANCE_SUCCESS,\n        payload: { satoshi: data },\n      })\n    })\n    .catch((err) => errorHandler(err, BANK_SATOSHI_BALANCE_FAILURE))\n}\n\nexport const sttPrice = () => (dispatch: Dispatch<AppActions>) => {\n  dispatch({ type: STT_PRICE_REQUEST })\n  requestBank('sttPrice')\n    .then((res) => {\n      dispatch({\n        type: STT_PRICE_SUCCESS,\n        payload: formaterNumber(res),\n      })\n    })\n    .catch((err) => errorHandler(err, STT_PRICE_FAILURE))\n}\n\nexport const tokenPrices = () => (dispatch: Dispatch<AppActions>) => {\n  dispatch({ type: TOKEN_PRICE_REQUEST })\n  const tokens = ['BTC', 'BNB', 'STTS', 'STT']\n  Promise.all(\n    tokens.map((token) => {\n      if (token === 'STT') {\n        return new Promise((resolve) =>\n          requestBank('sttPrice').then((res) =>\n            resolve({ token, price: bytesFormater(res) })\n          )\n        )\n      }\n      const decimals = (10 ** erc20.decimals[token]).toString()\n      return new Promise((resolve) =>\n        // @ts-ignore\n        requestBank(`${token.toLowerCase()}ToSatoshi`, decimals).then((res) =>\n          resolve({ token, price: formaterNumber(res) })\n        )\n      )\n    })\n  )\n    .then(async (data: any) => {\n      const prices = data.reduce((items, item) => {\n        if (item.token === 'BTC' || item.token === 'BTCB')\n          return {\n            ...items,\n            BTC: item.price,\n            BTCB: item.price,\n          }\n        else\n          return {\n            ...items,\n            [item.token]: item.price,\n          }\n      }, {})\n      const latestPrice = await priceContract.latestAnswer()\n      const BTC = formaterNumber(latestPrice, 8)\n      dispatch({\n        type: TOKEN_PRICE_SUCCESS,\n        payload: {\n          prices,\n          dollar: { BTC },\n        },\n      })\n    })\n    .catch((err) => errorHandler(err, TOKEN_PRICE_FAILURE))\n}\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { Row, Col } from 'react-grid-system'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AppActions, AppState } from '../../../../_types'\nimport { TokenValue } from '../../../Layout/typography/Tokens'\nimport { DepositButton } from '../../../Layout/svgs/DepositButton'\nimport { connect } from 'react-redux'\nimport { tokenPrices } from '../../../../_actions/bank.actions'\nimport { investmentDeposit } from '../../../../_actions/invest.actions'\nimport { formatToString } from '../../../../_helpers/api'\n\ninterface IProps {\n  token: string\n  value: number\n}\ntype DepositInfoProps = IProps &\n  ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\n\nconst DepositInfo: React.FC<DepositInfoProps> = ({\n  prices,\n  token,\n  dollar,\n  value,\n  loading,\n  account,\n  confirmed,\n  maxPercent,\n  investmentDeposit,\n}) => {\n  const depositHandler = () => {\n    if (!loading && !confirmed) {\n      console.log(formatToString(value, token))\n      investmentDeposit(token, formatToString(value, token))\n    }\n  }\n\n  const calcSatoshi = () => prices[token] * value\n\n  const CalcDollar = () => (calcSatoshi() / 10 ** 8) * dollar.BTC\n\n  const calcSTT = () => calcSatoshi() / 2.5 / prices.STT\n\n  const calcPercent = () => {\n    const cal = (calcSatoshi() * maxPercent) / 5000000\n    return cal + account.percent <= maxPercent\n      ? cal\n      : maxPercent - account.percent\n  }\n\n  const disableHandler = () => value <= 0 || calcSatoshi() < 500000\n\n  return (\n    <Row\n      align=\"center\"\n      justify=\"around\"\n      direction=\"column\"\n      style={{\n        width: '100%',\n        height: '100%',\n        margin: 'auto',\n        textAlign: 'center',\n      }}\n    >\n      <Col xs={12} width=\"100%\">\n        <Row align=\"center\" justify=\"around\">\n          <TokenValue\n            title=\"Number of tokens:\"\n            precision={token === 'STTS' ? 0 : 4}\n            token={token}\n            value={value}\n          />\n          <TokenValue\n            title=\"Price(Satoshi):\"\n            token=\"SATS\"\n            precision={0}\n            value={calcSatoshi()}\n          />\n        </Row>\n      </Col>\n      <Col xs={12} width=\"100%\">\n        <Row align=\"center\" justify=\"around\">\n          <TokenValue\n            title=\"Price(Smart Bits):\"\n            token=\"STB\"\n            precision={1}\n            value={calcSatoshi() / 100}\n          />\n          <TokenValue\n            title=\"Price(Dollar):\"\n            precision={2}\n            token=\"$\"\n            value={CalcDollar()}\n          />\n        </Row>\n      </Col>\n      <Col xs={12} width=\"100%\">\n        <Row align=\"center\" justify=\"around\">\n          <DepositButton\n            width={90}\n            onClick={depositHandler}\n            done={confirmed}\n            loading={loading}\n            disable={disableHandler()}\n          />\n        </Row>\n      </Col>\n      <Col xs={12} width=\"100%\">\n        <Row align=\"center\" justify=\"around\">\n          <TokenValue\n            value={calcSTT()}\n            precision={0}\n            title=\"Invetment Reward:\"\n          />\n          <TokenValue\n            value={account.percent / 100}\n            precision={2}\n            token=\"%\"\n            title=\"Referral percent:\"\n            double={calcPercent() / 100}\n          />\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { loggedIn } = state.account\n  const { prices, dollar } = state.bank\n  const { investLoading, confirmed, account, maxPercent } = state.invest\n  return {\n    prices,\n    dollar,\n    account,\n    loggedIn,\n    confirmed,\n    maxPercent,\n    loading: investLoading,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\n  tokenPrice: bindActionCreators(tokenPrices, dispatch),\n  investmentDeposit: bindActionCreators(investmentDeposit, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DepositInfo)\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'react-grid-system'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { removeError } from '../../../../_actions/invest.actions'\nimport { AppActions, AppState } from '../../../../_types'\nimport { percentToValue, valueToPercent } from '../../../../_helpers/api'\nimport DepositCircle from '../../../Layout/svgs/DepositCircle'\nimport TokenCircle from '../../../Layout/svgs/TokenCircle'\nimport DepositInfo from './DepositInfo'\n\ninterface IProps {\n  isMobile: boolean\n}\ntype DepositSectionProps = IProps &\n  ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\n\nexport const tokenNames = ['STTS', 'BNB', 'BTCB']\n\nexport const DepositSection: React.FC<DepositSectionProps> = ({\n  isMobile,\n  tokens,\n  investError,\n  address,\n  removeError,\n}) => {\n  const [token, setToken] = useState<string>('STTS')\n  const [balance, setBalance] = useState(0)\n  const [value, setValue] = useState(0)\n\n  useEffect(() => {\n    const b = Number(tokens[token])\n    setBalance(b > 0 ? b : 0)\n    setValue(b > 0 ? b : 0)\n  }, [address, tokens, token])\n\n  const percentHandler = (per: number) => {\n    if (investError) removeError()\n    setValue(percentToValue(balance, per))\n  }\n\n  const inputHandler = (e) => {\n    if (investError) removeError()\n    const val = e.currentTarget?.valueAsNumber\n    if (val) {\n      setValue(val < 0 ? 0 : val)\n    } else setValue(0)\n  }\n\n  return (\n    <Row direction=\"row\" style={{ height: '100%' }}>\n      <Col md={2}>\n        <Row\n          direction={isMobile ? 'row' : 'column'}\n          justify=\"around\"\n          align=\"center\"\n          style={{ height: '100%' }}\n        >\n          {tokenNames.map((t) => (\n            <TokenCircle\n              key={t}\n              width={70}\n              onClick={setToken}\n              token={t}\n              active={token === t}\n            />\n          ))}\n        </Row>\n      </Col>\n      <Col md={4}>\n        <Row justify=\"around\" align=\"center\" style={{ height: '100%' }}>\n          <DepositCircle\n            width={210}\n            token={token}\n            value={value}\n            percent={valueToPercent(value, balance)}\n            inputHandler={inputHandler}\n            percentHandler={percentHandler}\n          />\n        </Row>\n      </Col>\n      <Col md={6}>\n        <DepositInfo token={token} value={value} />\n      </Col>\n    </Row>\n  )\n}\nconst mapStateToProps = (state: AppState) => {\n  const { tokens, address, error, loggedIn } = state.account\n  const { error: investError } = state.invest\n  return {\n    address,\n    loggedIn,\n    tokens,\n    investError,\n  }\n}\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\n  removeError: bindActionCreators(removeError, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DepositSection)\n","import React from 'react'\nimport Colors from '../../../Theme/Colors'\n\ninterface ReferralPolygonProps {\n  width: number\n  done: boolean\n  loading: boolean\n  disable?: boolean\n  onClick: () => void\n}\n\nconst ReferralButton: React.FC<ReferralPolygonProps> = ({\n  width,\n  done,\n  loading,\n  disable,\n  onClick,\n}) => {\n  width = width + 50\n  const half = width / 2\n  const r = half - 30\n  return (\n    <svg height={width - 50} width={width}>\n      <g\n        onClick={disable ? undefined : onClick}\n        className={loading ? 'loadingDeposit' : undefined}\n      >\n        <circle\n          cx={half}\n          cy={half - 25}\n          r={r}\n          strokeLinecap=\"round\"\n          stroke={disable ? 'grey' : Colors.green}\n          strokeWidth=\"2.5\"\n          fill={Colors.background}\n        />\n        <svg\n          viewBox=\"0 0 100 100\"\n          focusable=\"false\"\n          data-icon=\"check\"\n          opacity={loading || done ? '1' : '0.5'}\n          fill={Colors.green}\n        >\n          {done ? (\n            <path d=\"M76.583 29.11h-4.66c-.653 0-1.273.3-1.673.813L42.763 64.743 29.583 48.043a2.133 2.133 0 0 0-1.673-.813H23.25c-.447 0-.693.513-.42.86l18.26 23.133c.853 1.08 2.493 1.08 3.353 0l32.56-41.26c.273-.34.027-.853-.42-.853z\" />\n          ) : (\n            <path\n              className={loading ? 'doneSplash' : ''}\n              d=\"M30 49 17 69 42 69 30 49M50 17 69 47 31 47 50 17M70 49 82 69 57 69 70 49\"\n            ></path>\n          )}\n        </svg>\n        <text\n          textAnchor=\"middle\"\n          dominantBaseline=\"middle\"\n          x=\"50%\"\n          y=\"53%\"\n          fill=\"white\"\n          fontWeight=\"bold\"\n          fontSize=\"15\"\n        >\n          {done ? '' : loading ? '' : ''}\n        </text>\n      </g>\n    </svg>\n  )\n}\n\nexport default ReferralButton\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { AppActions, AppState } from '../../../../_types'\nimport { Row, Col } from 'react-grid-system'\nimport { investInformation } from '../../../../_actions/invest.actions'\nimport ReferralButton from '../../../Layout/svgs/ReferralButton'\nimport { TokenValue } from '../../../Layout/typography/Tokens'\nimport { notification } from 'antd'\n\ninterface IProps {}\n\ntype ReferralSectionProps = IProps &\n  ReturnType<typeof mapDispatchToProps> &\n  ReturnType<typeof mapStateToProps>\n\nexport const DetailSection: React.FC<ReferralSectionProps> = ({\n  address,\n  pathname,\n  account,\n  tokens,\n}) => {\n  const [done, setDone] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  const link = `${window.location.origin}${pathname}?ref=${address}`\n\n  const copyHandler = () => {\n    if (!loading && !done) {\n      if (navigator.clipboard) navigator.clipboard.writeText(link)\n      else {\n        var textField = document.createElement('textarea')\n        textField.innerText = link\n        document.body.appendChild(textField)\n        textField.select()\n        document.execCommand('copy')\n        textField.remove()\n      }\n      notification.success({\n        message: 'Reffral Link Copied!',\n        placement: 'bottomRight',\n        duration: 2,\n        closeIcon: <div></div>,\n      })\n      setLoading(true)\n      setDone(false)\n      setTimeout(() => {\n        setLoading(false)\n        setDone(true)\n        setTimeout(() => {\n          setDone(false)\n        }, 2000)\n      }, 1000)\n    }\n  }\n\n  return (\n    <Row\n      align=\"center\"\n      justify=\"around\"\n      direction=\"column\"\n      style={{\n        width: '100%',\n        height: '100%',\n        margin: 'auto',\n        textAlign: 'center',\n      }}\n    >\n      <Col xs={12} width=\"100%\">\n        <Row align=\"center\" justify=\"around\">\n          <TokenValue\n            title=\"Referral percent:\"\n            precision={2}\n            token=\"%\"\n            value={account.percent / 100}\n          />\n          {/* <TokenValue\n            value={account.hourly}\n            precision={2}\n            title=\"Hourly reward:\"\n          /> */}\n        </Row>\n      </Col>\n      <Col xs={12} width=\"100%\">\n        {/* <Row align=\"center\" justify=\"around\">\n          {/* <TokenValue\n            title=\"Total mined:\"\n            precision={2}\n            token={'STT'}\n            value={1685}\n          />\n          <TokenValue value={0} precision={2} title=\"\" />\n        </Row>  */}\n      </Col>\n      <Col xs={12} width=\"100%\">\n        <Row align=\"center\" justify=\"around\">\n          <ReferralButton\n            width={90}\n            loading={loading}\n            onClick={copyHandler}\n            done={done}\n          />\n        </Row>\n      </Col>\n      <Col xs={12} width=\"100%\">\n        <Row align=\"center\" justify=\"around\">\n          <TokenValue\n            token=\"SATS\"\n            precision={0}\n            value={account.satoshi}\n            title=\"Total investment:\"\n          />\n          <TokenValue\n            value={tokens.STT}\n            token=\"STT\"\n            precision={0}\n            title=\"Total rewards:\"\n          />\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { address, tokens, error } = state.account\n  const { account } = state.invest\n  const {\n    location: { pathname },\n  } = state.router\n  return {\n    pathname,\n    account,\n    address,\n    tokens,\n    error,\n  }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\n  investInformation: bindActionCreators(investInformation, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailSection)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col } from 'react-grid-system'\nimport { bindActionCreators } from 'redux'\nimport { ThunkDispatch } from 'redux-thunk'\nimport { investInformation } from '../../../_actions/invest.actions'\nimport { AppActions, AppState } from '../../../_types'\nimport AccountAddress from '../Global/AccountAddress'\nimport WithdrawSection from './Withdraw'\nimport DepositSection from './Deposit'\nimport DetailSection from './Details'\nimport { tokenPrices } from '../../../_actions/bank.actions'\n\ninterface IProps {\n  isMobile: boolean\n}\n\ntype InvestmentProps = IProps &\n  ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\n\nconst delay = 30\n\nconst Investment: React.FC<InvestmentProps> = ({\n  isMobile,\n  address,\n  tokenPrices,\n  investInformation,\n}) => {\n  useEffect(() => {\n    let timer\n    clearInterval(timer)\n    if (address) {\n      tokenPrices()\n      investInformation(address)\n      timer = setInterval(() => {\n        tokenPrices()\n        investInformation(address)\n      }, delay * 1000)\n    }\n\n    return () => {\n      clearInterval(timer)\n    }\n  }, [address])\n\n  return (\n    <Container fluid>\n      <Row gutterWidth={10} justify=\"between\" align=\"center\">\n        <Col md={12}>\n          <AccountAddress />\n        </Col>\n      </Row>\n      <Row justify=\"between\" style={{ minHeight: isMobile ? 1200 : 300 }}>\n        <Col md={12} lg={6}>\n          <DepositSection isMobile={isMobile} />\n        </Col>\n        <Col md={6} lg={3}>\n          <WithdrawSection width={230} />\n        </Col>\n        <Col md={6} lg={3}>\n          <DetailSection />\n        </Col>\n      </Row>\n      {/* <Row gutterWidth={10} justify=\"end\">\n        <Footer />\n      </Row> */}\n    </Container>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const { tokens, error, address } = state.account\n  return {\n    address,\n    tokens,\n    error,\n  }\n}\nconst mapDispatchToProps = (dispatch: ThunkDispatch<any, any, AppActions>) => ({\n  investInformation: bindActionCreators(investInformation, dispatch),\n  tokenPrices: bindActionCreators(tokenPrices, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Investment)\n","import React from 'react'\nimport Investment from '../components/Wallet/Investment'\nimport { Switch, Route, Redirect, useLocation } from 'react-router-dom'\nimport { useTransition, animated } from 'react-spring'\nimport { AbsoluteBody } from '../components/Layout/divs/Divs'\n\ninterface AppRouterProps {\n  isMobile: boolean\n}\n\nexport const AppRouter: React.FC<AppRouterProps> = ({ isMobile }) => {\n  const location = useLocation()\n  const transitions = useTransition(location, {\n    key: location.pathname,\n    from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n    enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n    leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' },\n  })\n\n  return transitions((style, item, _, key) => (\n    <AbsoluteBody>\n      <animated.div key={key} style={style}>\n        <Switch location={item}>\n          <Route exact path=\"/invest\">\n            <Investment isMobile={isMobile} />\n          </Route>\n          <Route exact path=\"/freeze\">\n            <Test />\n          </Route>\n          <Route exact path=\"/stts\">\n            <Test />\n          </Route>\n          <Route exact path=\"/info\">\n            <Test />\n          </Route>\n          <Route exact path=\"/swap\">\n            <Test />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/invest\" />\n          </Route>\n        </Switch>\n      </animated.div>\n    </AbsoluteBody>\n  ))\n}\n\ninterface tester {}\n\nexport const Test: React.FC<tester> = ({}) => {\n  return <div>Not Available Yet!</div>\n}\n","import ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './_store/store.config'\nimport App from './App'\nimport './index.less'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}